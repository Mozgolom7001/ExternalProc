//ПОДГОТОВКА РЕГИСТРАЦИИ ОБРАБОТКИ

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// БезопасныйРежим – Булево – Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// Информация - Строка- краткая информация по обработке, описание обработки
//
// ВерсияБСП - Строка - Минимальная версия БСП, на которую рассчитывает код
// дополнительной обработки. Номер версии БСП задается в формате «РР.ПП.ВВ.СС»
// (РР – старший номер редакции; ПП – младший номер ре-дакции; ВВ – номер версии; СС – номер сборки).
//
// Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение – Булево – если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор – строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
  
  ПараметрыРегистрации = Новый Структура;
  ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //Варианты: "ДополнительнаяОбработка", "ДополнительныйОтчет", "ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов" 
  
  МассивНазначений = Новый Массив();
 МассивНазначений.Добавить("Документ.ВедомостьНаВыплатуЗарплатыВКассу");// например: "Документ._ДемоСчетНаОплатуПокупателю"
 
  ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
  
 ПараметрыРегистрации.Вставить("Наименование", "РКО для ВедомостьНаВыплатуЗарплатыВКассу");
  ПараметрыРегистрации.Вставить("Версия", "1.0"); //например: "1.0"
  ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина); //Варианты: Истина, Ложь
  ПараметрыРегистрации.Вставить("Информация", "");
  ПараметрыРегистрации.Вставить("ВерсияБСП", "1.2.1.4");// не ниже какой версии БСП подерживается обработка
  
  ТаблицаКоманд = ПолучитьТаблицуКоманд();

  ДобавитьКоманду(ТаблицаКоманд,
          НСтр("ru = 'РКО (общий)'"),//для отображения пользователю
          "РКООРПОРП",    //можно использовать для подмены поставляемой печатной формы
          "ВызовСерверногоМетода",  //Использование.  Варианты: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"   
          Ложь,//Показывать оповещение. Варианты Истина, Ложь 
          "ПечатьMXL");//Модификатор 
		  
		  
ДобавитьКоманду(ТаблицаКоманд,
          НСтр("ru = 'РКО (на сотрудников)'"),//для отображения пользователю
          "РКОСотрудники",    //можно использовать для подмены поставляемой печатной формы
          "ВызовСерверногоМетода",  //Использование.  Варианты: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"   
          Ложь,//Показывать оповещение. Варианты Истина, Ложь 
          "ПечатьMXL");//Модификатор


  ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

  Возврат ПараметрыРегистрации;

КонецФункции

Функция ПолучитьТаблицуКоманд()

  Команды = Новый ТаблицаЗначений;
  Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
  Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
  Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

  Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры



//ФОРМИРОВАНИЕ ПЕЧАТНОЙ ФОРМЫ

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода = Неопределено)  экспорт 
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РКООРПОРП") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"РКООРПОРП", //тот же - что и в функции "СведенияОВнешнейОбработке"! 
		"", 
		СформироватьПечатнуюФорму1(МассивОбъектов, ОбъектыПечати)//исполняющая функция (в этом же модуле)
		);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РКОСотрудники") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"РКОСотрудники", //тот же - что и в функции "СведенияОВнешнейОбработке"! 
		"", 
		СформироватьПечатнуюФормуСотрудники(МассивОбъектов, ОбъектыПечати)//исполняющая функция (в этом же модуле)
		);
	КонецЕсли;
		
КонецПроцедуры				

Функция СформироватьПечатнуюФорму1(МассивОбъектов, ОбъектыПечати)	
	 ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	//формирование табличного документа ТабДок
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПараметрыПечати_РКО";	

    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВедомостьНаВыплатуЗарплатыВКассу.Ссылка КАК Ссылка,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Дата КАК ДатаДокумента,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Организация КАК Организация,
		|	""50"" КАК СчетКасса,
		|	""70"" КАК Поле2,
		|	ВедомостьНаВыплатуЗарплатыВКассу.СуммаПоДокументу КАК СуммаПоДокументу,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Представление КАК Представление,
		|	ВедомостьНаВыплатуЗарплатыВКассу.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	ВедомостьНаВыплатуЗарплатыВКассу.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Руководитель КАК Руководитель,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Кассир КАК Кассир,
		|	ВедомостьНаВыплатуЗарплатыВКассу.ДолжностьКассира КАК ДолжностьКассира,
		|	ВедомостьНаВыплатуЗарплатыВКассу.Бухгалтер КАК Бухгалтер
		|ИЗ
		|	Документ.ВедомостьНаВыплатуЗарплатыВКассу КАК ВедомостьНаВыплатуЗарплатыВКассу
		|ГДЕ
		|	ВедомостьНаВыплатуЗарплатыВКассу.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВставлятьРазделительСтраниц = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл //перебора массива объектов
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	
	   Макет = ПолучитьМакет("ПФ_MXL_КО2");
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		СведенияОбОрганизации     = ВыборкаДетальныеЗаписи.Организация;
			                       	
		// Выводим шапку
		ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.НаименованиеСокращенное;
		ОбластьМакета.Параметры.Сумма = Формат(ВыборкаДетальныеЗаписи.СуммаПоДокументу, "ЧЦ=15; ЧДЦ=2");
								//СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Шапка.Сумма, Шапка.Валюта);
		СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВыборкаДетальныеЗаписи.СуммаПоДокументу, ВалютаУчета);
		СуммаПрописьюПродолжение = "";
		Если СтрДлина(СуммаПрописью) > 92 Тогда
			н = 92;
			Пока н > 0 И Сред(СуммаПрописью, н, 1) <> " " Цикл
				н = н-1;
			КонецЦикла;
			
			СуммаПрописьюПродолжение = Сред(СуммаПрописью, н + 1);
			СуммаПрописью = Лев(СуммаПрописью, н);
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаПрописью         = СуммаПрописью;
		ОбластьМакета.Параметры.СуммаПрописьюПродолжение = СуммаПрописьюПродолжение;
		
		ОбластьМакета.Параметры.ОрганизацияПоОКПО     = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента         = Формат(ВыборкаДетальныеЗаписи.ДатаДокумента, "ДФ=dd.MM.yyyy");
		//ОбластьМакета.Параметры.НомерДокумента        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДетальныеЗаписи.Номер, Истина, Ложь);
		ОбластьМакета.Параметры.ДатаДокументаПрописью = Формат(ВыборкаДетальныеЗаписи.ДатаДокумента, "ДФ='dd MMMM yyyy ""г.""'");
		
		//КодыСчетСубсчет = "70";
		
		ОбластьМакета.Параметры.ДебетСубСчет          = "70";
		ОбластьМакета.Параметры.КредитСубСчет         = "50.01";
		
		//ПодразделениеОтветственныхЛиц = ВыборкаДетальныеЗаписи.ПодразделениеОрганизации;
		
		//ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.ДатаДокумента, ПодразделениеОтветственныхЛиц);
		
		ОбластьМакета.Параметры.ФИОРуководителя       = ВыборкаДетальныеЗаписи.Руководитель;
		ОбластьМакета.Параметры.ДолжностьРуководителя = ВыборкаДетальныеЗаписи.ДолжностьРуководителя;
		
		ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ВыборкаДетальныеЗаписи.ГлавныйБухгалтер;
		ОбластьМакета.Параметры.ФИОКассира            = ВыборкаДетальныеЗаписи.Кассир;
		
		ОбластьМакета.Параметры.Основание             = ВыборкаДетальныеЗаписи.Представление;
		//ОбластьМакета.Параметры.Приложение            = ВыборкаДетальныеЗаписи.Приложение;
		
		//ОбластьМакета.Параметры.ФИОПолучателя         = Шапка.Выдать;
		//ОбластьМакета.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = Шапка.ПоДокументу;
		
		ТабДок.Вывести(ОбластьМакета);

	
	ВставлятьРазделительСтраниц = Истина;
		//подключимся к общ механизму обл печати
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла; //перебора массива объектов



	Возврат ТабДок;
	
КонецФункции


Функция СформироватьПечатнуюФормуСотрудники(МассивОбъектов, ОбъектыПечати)	
	 ВалютаУчета = ЗарплатаКадры.ВалютаУчетаЗаработнойПлаты();
	//формирование табличного документа ТабДок
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПараметрыПечати_РКО";	

    	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка КАК СсылкаДок,
		|	""50"" КАК СчетКасса,
		|	""70"" КАК СчетЗарплата,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Сотрудник.Ссылка КАК Ссылка,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Номер КАК НомерДокумента,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Дата КАК ДатаДокумента,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Организация КАК Организация,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Подразделение КАК ПредставлениеПодразделения,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.КВыплате КАК Сумма,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Сотрудник КАК Сотрудник,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Руководитель КАК Руководитель,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.ДолжностьРуководителя КАК ДолжностьРуководителя,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Кассир КАК Кассир,
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка.Представление КАК Представление
		|ПОМЕСТИТЬ ВТДанныеДокументов
		|ИЗ
		|	Документ.ВедомостьНаВыплатуЗарплатыВКассу.Зарплата КАК ВедомостьНаВыплатуЗарплатыВКассуЗарплата
		|ГДЕ
		|	ВедомостьНаВыплатуЗарплатыВКассуЗарплата.Ссылка В(&Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.Сотрудник КАК Сотрудник,
		|	НАЧАЛОПЕРИОДА(ВТДанныеДокументов.СсылкаДок.Дата, ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.Руководитель КАК ФизическоеЛицо,
		|	НАЧАЛОПЕРИОДА(ВТДанныеДокументов.СсылкаДок.Дата, ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ ВТФизическиеЛицаПериоды
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.ГлавныйБухгалтер,
		|	НАЧАЛОПЕРИОДА(ВТДанныеДокументов.СсылкаДок.Дата, ДЕНЬ)
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТДанныеДокументов.Кассир,
		|	НАЧАЛОПЕРИОДА(ВТДанныеДокументов.СсылкаДок.Дата, ДЕНЬ)
		|ИЗ
		|	ВТДанныеДокументов КАК ВТДанныеДокументов";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	Запрос.Выполнить();
	
	// Получение кадровых данных сотрудника.
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТСотрудникиПериоды");
	КадровыеДанные = "ФИОПолные,ДокументПредставление,Пол";
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	// Получение ФИО руководителей.
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛицаПериоды");
	КадровыеДанные = "ФамилияИО,Пол";
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, КадровыеДанные);

	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДокументов.СсылкаДок КАК СсылкаДок,
	               |	ДанныеДокументов.СчетКасса КАК СчетКасса,
	               |	ДанныеДокументов.СчетЗарплата КАК СчетЗарплата,
	               |	ДанныеДокументов.Ссылка КАК Ссылка,
	               |	ДанныеДокументов.НомерДокумента КАК НомерДокумента,
	               |	ДанныеДокументов.ДатаДокумента КАК ДатаДокумента,
	               |	ДанныеДокументов.Организация КАК Организация,
	               |	ДанныеДокументов.ПредставлениеОрганизации КАК ПредставлениеОрганизации,
	               |	ДанныеДокументов.ПредставлениеПодразделения КАК ПредставлениеПодразделения,
	               |	ДанныеДокументов.ОрганизацияПоОКПО КАК ОрганизацияПоОКПО,
	               |	ДанныеДокументов.Сумма КАК Сумма,
	               |	ДанныеДокументов.Сотрудник КАК Сотрудник,
	               |	ДанныеДокументов.ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ДанныеДокументов.Руководитель КАК Руководитель,
	               |	ДанныеДокументов.ДолжностьРуководителя КАК ДолжностьРуководителя,
	               |	ДанныеДокументов.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	               |	ДанныеДокументов.Кассир КАК Кассир,
				   |	ДанныеДокументов.Представление КАК Основание,
	               |	КадровыеДанныеРуководитель.ФамилияИО КАК ФИОРуководителя,
	               |	КадровыеДанныеГлБух.ФамилияИО КАК ФИОГлавногоБухгалтера,
	               |	КадровыеДанныеКассир.ФамилияИО КАК ФИОКассира,
	               |	КадровыеДанныеСотрудников.ФИОПолные КАК ФИОПолучателя,
	               |	КадровыеДанныеСотрудников.ДокументПредставление КАК РеквизитыДокументаУдостоверяющегоЛичность,
	               |	КадровыеДанныеСотрудников.Пол КАК ПолСотрудника
	               |ИЗ
	               |	ВТДанныеДокументов КАК ДанныеДокументов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеРуководитель
	               |		ПО ДанныеДокументов.Руководитель = КадровыеДанныеРуководитель.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеГлБух
	               |		ПО ДанныеДокументов.ГлавныйБухгалтер = КадровыеДанныеГлБух.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеКассир
	               |		ПО ДанныеДокументов.Кассир = КадровыеДанныеКассир.ФизическоеЛицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
	               |		ПО ДанныеДокументов.Сотрудник = КадровыеДанныеСотрудников.Сотрудник";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВставлятьРазделительСтраниц = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл //перебора массива объектов
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
	
	
	   Макет = ПолучитьМакет("ПФ_MXL_КО2");
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
			                       	
		// Выводим шапку
		ОбластьМакета.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		//ОбластьМакета.Параметры.ПредставлениеОрганизации = СведенияОбОрганизации.НаименованиеСокращенное;
		ОбластьМакета.Параметры.Сумма = Формат(ВыборкаДетальныеЗаписи.Сумма, "ЧЦ=15; ЧДЦ=2");
								//СуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Шапка.Сумма, Шапка.Валюта);
		СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВыборкаДетальныеЗаписи.Сумма, ВалютаУчета);
		СуммаПрописьюПродолжение = "";
		Если СтрДлина(СуммаПрописью) > 92 Тогда
			н = 92;
			Пока н > 0 И Сред(СуммаПрописью, н, 1) <> " " Цикл
				н = н-1;
			КонецЦикла;
			
			СуммаПрописьюПродолжение = Сред(СуммаПрописью, н + 1);
			СуммаПрописью = Лев(СуммаПрописью, н);
		КонецЕсли;
		
		ОбластьМакета.Параметры.СуммаПрописью         = СуммаПрописью;
		ОбластьМакета.Параметры.СуммаПрописьюПродолжение = СуммаПрописьюПродолжение;
		
		//ОбластьМакета.Параметры.ОрганизацияПоОКПО     = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакета.Параметры.ДатаДокумента         = Формат(ВыборкаДетальныеЗаписи.ДатаДокумента, "ДФ=dd.MM.yyyy");
		//ОбластьМакета.Параметры.НомерДокумента        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДетальныеЗаписи.Номер, Истина, Ложь);
		ОбластьМакета.Параметры.ДатаДокументаПрописью = Формат(ВыборкаДетальныеЗаписи.ДатаДокумента, "ДФ='dd MMMM yyyy ""г.""'");
		
		//КодыСчетСубсчет = "70";
		
		ОбластьМакета.Параметры.ДебетСубСчет          = "70";
		ОбластьМакета.Параметры.КредитСубСчет         = "50.01";
		
		//ПодразделениеОтветственныхЛиц = ВыборкаДетальныеЗаписи.ПодразделениеОрганизации;
		
		//ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.ДатаДокумента, ПодразделениеОтветственныхЛиц);
		
		//ОбластьМакета.Параметры.ФИОРуководителя       = ВыборкаДетальныеЗаписи.Руководитель;
		//ОбластьМакета.Параметры.ДолжностьРуководителя = ВыборкаДетальныеЗаписи.ДолжностьРуководителя;
		
		//ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ВыборкаДетальныеЗаписи.ГлавныйБухгалтер;
		//ОбластьМакета.Параметры.ФИОКассира            = ВыборкаДетальныеЗаписи.Кассир;
		
		//ОбластьМакета.Параметры.Основание             = ВыборкаДетальныеЗаписи.Представление;
		//ОбластьМакета.Параметры.Приложение            = ВыборкаДетальныеЗаписи.Приложение;
		
		//ОбластьМакета.Параметры.ФИОПолучателя         = Шапка.Выдать;
		//ОбластьМакета.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = Шапка.ПоДокументу;
		
		ТабДок.Вывести(ОбластьМакета);

	
	ВставлятьРазделительСтраниц = Истина;
		//подключимся к общ механизму обл печати
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла; //перебора массива объектов



	Возврат ТабДок;
	
КонецФункции
