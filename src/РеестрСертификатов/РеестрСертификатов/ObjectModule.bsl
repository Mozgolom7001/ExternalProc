Функция ПечатьВнешнейПечатнойФормы(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭтоПриходнаяНакладная = Ложь;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СертификатыНоменклатуры_РеестрСертификатов";
	
	МассивОбъектовДляЗапроса = МассивОбъектов;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 		
	"ВЫБРАТЬ
	|	ТаблицаТоваровРеализации.Ссылка КАК Ссылка,
	|	ТаблицаТоваровРеализации.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровРеализации.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаТоваровРеализации.Упаковка КАК Упаковка,
	|	ТаблицаТоваровРеализации.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровРеализации.Дата
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка КАК Ссылка,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Упаковка КАК Упаковка,
	|		МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|		ТаблицаТоваров.Ссылка.Дата КАК Дата
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаТоваров.Ссылка,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Упаковка,
	|		ТаблицаТоваров.Ссылка.Дата) КАК ТаблицаТоваровРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровРеализации.Ссылка,
	|	ТаблицаТоваровРеализации.Номенклатура,
	|	ТаблицаТоваровРеализации.Характеристика,
	|	ТаблицаТоваровРеализации.Упаковка,
	|	ТаблицаТоваровРеализации.НомерСтроки,
	|	ТаблицаТоваровРеализации.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка КАК Ссылка,
	|		ТаблицаТоваров.Содержание КАК Содержание,
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.Характеристика КАК Характеристика,
	|		ТаблицаТоваров.Упаковка КАК Упаковка,
	|		МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|		ТаблицаТоваров.Ссылка.Дата КАК Дата
	|	ИЗ
	|		Документ.КорректировкаРеализации.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаТоваров.Ссылка,
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.Содержание,
	|		ТаблицаТоваров.Характеристика,
	|		ТаблицаТоваров.Упаковка,
	|		ТаблицаТоваров.Ссылка.Дата) КАК ТаблицаТоваровРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТоваровРеализации.Ссылка,
	|	ТаблицаТоваровРеализации.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТаблицаТоваровРеализации.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТаблицаТоваровРеализации.Упаковка,
	|	ТаблицаТоваровРеализации.НомерСтроки,
	|	ТаблицаТоваровРеализации.Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Ссылка КАК Ссылка,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Упаковка КАК Упаковка,
	|		МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|		ТаблицаТоваров.Ссылка.Дата КАК Дата
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаТоваров.Ссылка,
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Упаковка,
	|		ТаблицаТоваров.Ссылка.Дата) КАК ТаблицаТоваровРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	ЛОЖЬ КАК НоменклатураВестиУчетСертификатовНоменклатуры
	|ПОМЕСТИТЬ ВсеДокументы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеДокументы.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВсеДокументы.НоменклатураВестиУчетСертификатовНоменклатуры) КАК НоменклатураВестиУчетСертификатовНоменклатуры
	|ПОМЕСТИТЬ ДокументыУчетСертификатов
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтрокиТоваров.Ссылка КАК Ссылка,
	|		СтрокиТоваров.Номенклатура.ВестиУчетСертификатовНоменклатуры КАК НоменклатураВестиУчетСертификатовНоменклатуры
	|	ИЗ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВсеДокументы.Ссылка,
	|		ВсеДокументы.НоменклатураВестиУчетСертификатовНоменклатуры
	|	ИЗ
	|		ВсеДокументы КАК ВсеДокументы) КАК ВсеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеДокументы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыУчетСертификатов.Ссылка,
	|	ДокументыУчетСертификатов.НоменклатураВестиУчетСертификатовНоменклатуры
	|ИЗ
	|	ДокументыУчетСертификатов КАК ДокументыУчетСертификатов
	|ГДЕ
	|	ДокументыУчетСертификатов.НоменклатураВестиУчетСертификатовНоменклатуры = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыУчетСертификатов.Ссылка
	|ПОМЕСТИТЬ ДокументыПоКоторымВедетсяУчетСертификатов
	|ИЗ
	|	ДокументыУчетСертификатов КАК ДокументыУчетСертификатов
	|ГДЕ
	|	ДокументыУчетСертификатов.НоменклатураВестиУчетСертификатовНоменклатуры = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияСерийТоваров.Ссылка КАК Ссылка,
	|	ДвиженияСерийТоваров.Серия,
	|	ДвиженияСерийТоваров.Номенклатура,
	|	ДвиженияСерийТоваров.Характеристика
	|ПОМЕСТИТЬ ДвиженияСерийТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияСерийТоваров.Документ КАК Ссылка,
	|		ДвиженияСерийТоваров.Серия КАК Серия,
	|		ДвиженияСерийТоваров.Номенклатура КАК Номенклатура,
	|		ДвиженияСерийТоваров.Характеристика КАК Характеристика
	|	ИЗ
	|		РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоКоторымВедетсяУчетСертификатов КАК ДокументыПоКоторымВедетсяУчетСертификатов
	|			ПО ДвиженияСерийТоваров.Документ = ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка,
	|		ДвиженияСерийТоваров.Серия,
	|		ДвиженияСерийТоваров.Номенклатура,
	|		ДвиженияСерийТоваров.Характеристика
	|	ИЗ
	|		ДокументыПоКоторымВедетсяУчетСертификатов КАК ДокументыПоКоторымВедетсяУчетСертификатов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|				ПО ТоварыПоРаспоряжениям.Ссылка = ДвиженияСерийТоваров.Документ
	|			ПО (ТоварыПоРаспоряжениям.Распоряжение = ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка)) КАК ДвиженияСерийТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиТоваров.Номенклатура КАК Номенклатура,
	|	СтрокиТоваров.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ДвиженияСерийТоваров.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	СтрокиТоваров.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	СтрокиТоваров.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	СтрокиТоваров.Дата
	|ПОМЕСТИТЬ ДокументТовары
	|ИЗ
	|	СтрокиТоваров КАК СтрокиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
	|		ПО СтрокиТоваров.Ссылка = ДвиженияСерийТоваров.Ссылка
	|			И СтрокиТоваров.Номенклатура = ДвиженияСерийТоваров.Номенклатура
	|			И СтрокиТоваров.Характеристика = ДвиженияСерийТоваров.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоКоторымВедетсяУчетСертификатов КАК ДокументыПоКоторымВедетсяУчетСертификатов
	|		ПО СтрокиТоваров.Ссылка = ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка
	|ГДЕ
	|	СтрокиТоваров.Ссылка ССЫЛКА Документ.РеализацияТоваровУслуг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиТоваров.Номенклатура,
	|	СтрокиТоваров.Характеристика,
	|	ЕСТЬNULL(ПеремещениеТоваровСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)),
	|	СтрокиТоваров.Номенклатура.ВидНоменклатуры,
	|	СтрокиТоваров.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	СтрокиТоваров.Дата
	|ИЗ
	|	СтрокиТоваров КАК СтрокиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК ПеремещениеТоваровСерии
	|		ПО СтрокиТоваров.Ссылка = ПеремещениеТоваровСерии.Ссылка
	|			И СтрокиТоваров.Номенклатура = ПеремещениеТоваровСерии.Номенклатура
	|			И СтрокиТоваров.Характеристика = ПеремещениеТоваровСерии.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоКоторымВедетсяУчетСертификатов КАК ДокументыПоКоторымВедетсяУчетСертификатов
	|		ПО СтрокиТоваров.Ссылка = ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка
	|ГДЕ
	|	СтрокиТоваров.Ссылка ССЫЛКА Документ.КорректировкаРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиТоваров.Номенклатура,
	|	СтрокиТоваров.Характеристика,
	|	ЕСТЬNULL(ПеремещениеТоваровСерии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)),
	|	СтрокиТоваров.Номенклатура.ВидНоменклатуры,
	|	СтрокиТоваров.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	СтрокиТоваров.Дата
	|ИЗ
	|	СтрокиТоваров КАК СтрокиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК ПеремещениеТоваровСерии
	|		ПО СтрокиТоваров.Ссылка = ПеремещениеТоваровСерии.Ссылка
	|			И СтрокиТоваров.Номенклатура = ПеремещениеТоваровСерии.Номенклатура
	|			И СтрокиТоваров.Характеристика = ПеремещениеТоваровСерии.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоКоторымВедетсяУчетСертификатов КАК ДокументыПоКоторымВедетсяУчетСертификатов
	|		ПО СтрокиТоваров.Ссылка = ДокументыПоКоторымВедетсяУчетСертификатов.Ссылка
	|ГДЕ
	|	СтрокиТоваров.Ссылка ССЫЛКА Документ.ПеремещениеТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументТовары.Номенклатура,
	|	ДокументТовары.Характеристика,
	|	ДокументТовары.Серия,
	|	ДокументТовары.ВидНоменклатуры
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ДокументТовары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.ВидНоменклатуры,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ОбластиДействияСертификатовНоменклатуры.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ТОГДА 1
	|			КОГДА ОбластиДействияСертификатовНоменклатуры.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ТОГДА 2
	|			КОГДА ОбластиДействияСертификатовНоменклатуры.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				ТОГДА 3
	|			КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 4
	|		КОНЕЦ) КАК ПриоритетСертификата,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ТипСертификата КАК ТипСертификата,
	|	ВЫБОР
	|		КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСертификатовНоменклатуры.Действующий)
	|			ТОГДА ВЫБОР
	|					КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Бессрочный
	|						ТОГДА ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)
	|					ИНАЧЕ ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаОкончанияСрокаДействия
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ОкончаниеСрокаДействия,
	|	ВЫБОР
	|		КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСертификатовНоменклатуры.Действующий)
	|			ТОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаНачалаСрокаДействия
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК НачалоСрокаДействия
	|ПОМЕСТИТЬ ТоварыССертификатами
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК ОбластиДействияСертификатовНоменклатуры
	|		ПО (Товары.ВидНоменклатуры = ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры
	|					И Товары.Номенклатура = ОбластиДействияСертификатовНоменклатуры.Номенклатура
	|					И Товары.Характеристика = ОбластиДействияСертификатовНоменклатуры.Характеристика
	|					И Товары.Серия = ОбластиДействияСертификатовНоменклатуры.Серия
	|				ИЛИ Товары.ВидНоменклатуры = ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры
	|					И Товары.Номенклатура = ОбластиДействияСертификатовНоменклатуры.Номенклатура
	|					И Товары.Характеристика = ОбластиДействияСертификатовНоменклатуры.Характеристика
	|					И ОбластиДействияСертификатовНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ИЛИ Товары.ВидНоменклатуры = ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры
	|					И Товары.Номенклатура = ОбластиДействияСертификатовНоменклатуры.Номенклатура
	|					И ОбластиДействияСертификатовНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					И ОбластиДействияСертификатовНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ИЛИ Товары.ВидНоменклатуры = ОбластиДействияСертификатовНоменклатуры.ВидНоменклатуры
	|					И ОбластиДействияСертификатовНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					И ОбластиДействияСертификатовНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|					И ОбластиДействияСертификатовНоменклатуры.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|ГДЕ
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры,
	|	Товары.Серия,
	|	Товары.ВидНоменклатуры,
	|	Товары.Характеристика,
	|	Товары.Номенклатура,
	|	ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ТипСертификата,
	|	ВЫБОР
	|		КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСертификатовНоменклатуры.Действующий)
	|			ТОГДА ВЫБОР
	|					КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Бессрочный
	|						ТОГДА ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)
	|					ИНАЧЕ ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаОкончанияСрокаДействия
	|				КОНЕЦ
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСертификатовНоменклатуры.Действующий)
	|			ТОГДА ОбластиДействияСертификатовНоменклатуры.СертификатНоменклатуры.ДатаНачалаСрокаДействия
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументТовары.Ссылка КАК Ссылка,
	|	ДокументТовары.НомерСтроки КАК НомерСтроки,
	|	ДокументТовары.Номенклатура КАК Номенклатура,
	|	ДокументТовары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ТоварыССертификатами.ТипСертификата, """") КАК ТипСертификата,
	|	ДокументТовары.Серия КАК Серия,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ЕСТЬNULL(ТоварыССертификатами.СертификатНоменклатуры, ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СертификатыНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК СертификатНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыССертификатами.ОкончаниеСрокаДействия >= ДокументТовары.Дата
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ИСТИНА
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СертификатДействует,
	|	ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры КАК ВестиУчетСертификатовНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ВестиУчетСертификатовНоменклатуры
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыССертификатами.СертификатНоменклатуры ЕСТЬ NULL
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетДействующихСертификатов,
	|	ДокументТовары.Номенклатура.НаименованиеПолное КАК НаименованиеНоменклатуры,
	|	ДокументТовары.Характеристика.НаименованиеПолное КАК НаименованиеХарактеристики,
	|	ВЫБОР
	|		КОГДА ДокументТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара,
	|	ТоварыССертификатами.ПриоритетСертификата КАК ПриоритетСертификата,
	|	ТоварыССертификатами.СертификатНоменклатуры.ДатаОкончанияСрокаДействия КАК СрокДействия,
	|	ТоварыССертификатами.СертификатНоменклатуры.ОрганВыдавшийДокумент КАК ОрганВыдавшийСертификат,
	|	ТоварыССертификатами.СертификатНоменклатуры.Номер КАК РегистрационныйНомер,
	|	ТоварыССертификатами.СертификатНоменклатуры.Бессрочный КАК Бессрочный
	|ИЗ
	|	ДокументТовары КАК ДокументТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыССертификатами КАК ТоварыССертификатами
	|		ПО ДокументТовары.Номенклатура = ТоварыССертификатами.Номенклатура
	|			И ДокументТовары.Характеристика = ТоварыССертификатами.Характеристика
	|			И ДокументТовары.Серия = ТоварыССертификатами.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ТипСертификата УБЫВ,
	|	Серия,
	|	СертификатДействует УБЫВ,
	|	ПриоритетСертификата
	|ИТОГИ ПО
	|	Ссылка,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ТипСертификата,
	|	Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Ссылка.Номер КАК Номер,
	|	ДанныеДокументов.Ссылка.Дата КАК Дата,
	|	ДанныеДокументов.Ссылка.Представление КАК Представление,
	|	ДанныеДокументов.Ссылка.Организация КАК Организация,
	|	ДанныеДокументов.Ссылка.Контрагент КАК Контрагент
	|ИЗ
	|	ДокументыПоКоторымВедетсяУчетСертификатов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
	
		ТекстЗапроса = Запрос.Текст;
		Текстзапроса = СтрЗаменить(ТекстЗапроса, "Документ.РеализацияТоваровУслуг", "Документ.ПриобретениеТоваровУслуг");
		Запрос.Текст = ТекстЗапроса;
	    ЭтоПриходнаяНакладная = Истина;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектовДляЗапроса);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати = МассивРезультатов[10].Выбрать();	
	ВыборкаПоДокументам = МассивРезультатов[9].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	ВыборкаПоДокументамБезУчетаСертификатов = МассивРезультатов[3].Выбрать();
	
	Макет = ЭтотОбъект.ПолучитьМакет("ПФ_MXL_РеестрСертификатов");
			
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ДанныеПечати.Ссылка);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ТекстЗаголовка", НСтр("ru='Реестр сертификатов номенклатуры'"));
		СтруктураПараметров.Вставить("ДатаДок", Формат(ДанныеПечати.Дата, "ДФ=dd.MM.yyyy"));
		СтруктураПараметров.Вставить("НомерДок", ДанныеПечати.Номер);
		
		СтруктураПараметров.Вставить("ПоставщикНаименование",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата),
			"ПолноеНаименование"));
		СтруктураПараметров.Вставить("ПоставщикАдрес",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата),
			"ЮридическийАдрес"));
		СтруктураПараметров.Вставить("ПоставщикТелефон",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата),
			"Телефоны"));
			
		СтруктураПараметров.Вставить("ПокупательНаименование",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
			"ПолноеНаименование"));
		СтруктураПараметров.Вставить("ПокупательАдрес",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
			"ЮридическийАдрес"));
		СтруктураПараметров.Вставить("ПокупательТелефон",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата),
			"Телефоны"));
				
		Область.Параметры.Заполнить(СтруктураПараметров);
				
		ТабличныйДокумент.Вывести(Область);
				
		// Создаем массивы для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;

		//Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
		//ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
		ТабличныйДокумент.Вывести(Область);
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаСертификатов");
		ТабличныйДокумент.Присоединить(Область);
		
		НомерСтраницы = 2;
		НомерСтроки = 1;
		ОбластьПерваяСтрокаКолонкаТоваров = Неопределено;
		ОбластьПерваяСтрокаНачалоСтроки = Неопределено;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		ВыборкаПоНомеруСтроки = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНомеруСтроки.Следующий() Цикл
			
			ВывестиСтрокиДляПозицииТоваров(
				ТабличныйДокумент,
				Макет,
				ОбластьПерваяСтрокаКолонкаТоваров,
				НомерСтраницы,
				НомерСтроки,
				МассивВыводимыхОбластей);

			ВыборкаПоНоменклатуре = ВыборкаПоНомеруСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоНоменклатуре.Следующий() Цикл
				
				ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоХарактеристике.Следующий() Цикл
																
					//ОбластьПерваяСтрокаНачалоСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
					СтруктураПараметров = Новый Структура;
					//СтруктураПараметров.Вставить("НомерСтроки",НомерСтроки);
					//ОбластьПерваяСтрокаНачалоСтроки.Параметры.Заполнить(СтруктураПараметров);
												
					ОбластьПерваяСтрокаКолонкаТоваров = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
					ОбластьПерваяСтрокаКолонкаТоваров.Параметры.Заполнить(ВыборкаПоХарактеристике);
					
					ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоХарактеристике.НаименованиеНоменклатуры,
					ВыборкаПоХарактеристике.НаименованиеХарактеристики,
					);
					
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("Товар",ПредставлениеНоменклатуры);
					ОбластьПерваяСтрокаКолонкаТоваров.Параметры.Заполнить(СтруктураПараметров);			
										
					ВыборкаПоТипуСертификата = ВыборкаПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоТипуСертификата.Следующий() Цикл
						
						МассивСертификатов = Новый Массив;
						ПрерватьВыборкуПоСериям = Ложь;
						ВыборкаПоСериям = ВыборкаПоТипуСертификата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Пока ВыборкаПоСериям.Следующий() Цикл
														
								Выборка = ВыборкаПоСериям.Выбрать();
								ПрерватьВыборку = Ложь;
								ДействующийСертификатДляСерииДобавлен = Ложь;
								Пока Выборка.Следующий() Цикл
									
									Если НЕ Выборка.ВестиУчетСертификатовНоменклатуры и ЭтоПриходнаяНакладная Тогда
										
										ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификатНеНайден|КолонкаСертификатов");
										СтруктураПараметров = Новый Структура;
										СтруктураПараметров.Вставить("Сертификат",НСтр("ru='<Учет сертификатов не ведется>'"));
										ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);	
										
										ПрерватьВыборкуПоСериям = Истина;
										ПрерватьВыборку = Истина;
										
									ИначеЕсли Выборка.НетДействующихСертификатов Тогда
										
										ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификатЖирный|КолонкаСертификатов");
										СтруктураПараметров = Новый Структура;
										СтруктураПараметров.Вставить("Сертификат",НСтр("ru='<Нет действующих сертификатов>'"));
										ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);			
											
										Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											НСтр("ru = 'Для товара %1 отсутствуют зарегистрированные сертификаты. Требуется указать сертификаты номенклатуры.'"),
											ПредставлениеНоменклатуры);
										ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
											Текст,
											Выборка.Номенклатура);
																				
										ПрерватьВыборкуПоСериям = Истина;
										ПрерватьВыборку = Истина;										
										
									ИначеЕсли Не Выборка.СертификатДействует Тогда
										
										Если ДействующийСертификатДляСерииДобавлен Тогда
											Прервать;	
										КонецЕсли;
										
										Если ЗначениеЗаполнено(Выборка.Серия) Тогда
											Продолжить;
											ТексткОшибки = НСтр("ru='<%ТипСертификата%: нет действующих сертификатов для серии %Серия%>'");
											
											ПредставлениеНоменклатурыССерией = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
												ВыборкаПоХарактеристике.НаименованиеНоменклатуры,
												ВыборкаПоХарактеристике.Характеристика,
												,
												Выборка.Серия);
											
											Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.'"),
												ПредставлениеНоменклатурыССерией,
												Выборка.ТипСертификата);
											Иначе
												Продолжить;
											ТексткОшибки = НСтр("ru='<%ТипСертификата%: нет действующих сертификатов>'");
											Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
												НСтр("ru = 'Для товара %1 нет действующих сертификатов (%2). Требуется зарегистрировать действующий сертификат.'"),
												ПредставлениеНоменклатуры,
												Выборка.ТипСертификата);
										КонецЕсли;
										
										ПрерватьВыборку = Истина;
										ТексткОшибки = СтрЗаменить(ТексткОшибки,"%ТипСертификата%",Выборка.ТипСертификата);
										ТексткОшибки = СтрЗаменить(ТексткОшибки,"%Серия%",Выборка.Серия);
										ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификатЖирный|КолонкаСертификатов");
										СтруктураПараметров = Новый Структура;
										СтруктураПараметров.Вставить("Сертификат",ТексткОшибки);
										ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);															
										
										ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
												Текст,
												Выборка.Номенклатура);

									Иначе
										
										Если МассивСертификатов.Найти(Выборка.СертификатНоменклатуры) = Неопределено Тогда 			
											ОбластьСертификат = Макет.ПолучитьОбласть("СтрокаТаблицыСертификат|КолонкаСертификатов");
											СтруктураПараметров = Новый Структура;
											СтруктураПараметров.Вставить("Сертификат", Выборка.СертификатНоменклатуры);
											
											СтруктураПараметров.Вставить("РегистрационныйНомер", Выборка.РегистрационныйНомер);
											
											Если Выборка.Бессрочный Тогда
												
												СтруктураПараметров.Вставить("СрокДействия", "Бессрочный");	
												
											Иначе
												
												СтруктураПараметров.Вставить("СрокДействия", Формат(Выборка.СрокДействия, "ДФ=dd.MM.yyyy"));	
												
											КонецЕсли; 
											
											СтруктураПараметров.Вставить("ОрганВыдавшийСертификат", Выборка.ОрганВыдавшийСертификат);
											
											СтруктураПараметров.Вставить("СертификатНоменклатуры", Выборка.СертификатНоменклатуры);
											ОбластьСертификат.Параметры.Заполнить(СтруктураПараметров);
											
											МассивСертификатов.Добавить(Выборка.СертификатНоменклатуры);
											ДействующийСертификатДляСерииДобавлен = Истина;
										Иначе
											Продолжить;
										КонецЕсли

									КонецЕсли;
																				
									МассивВыводимыхОбластей.Добавить(ОбластьСертификат);
																		
									Если ПрерватьВыборку Тогда
										Прервать;
									КонецЕсли;	
									
								КонецЦикла;	
								
								Если ПрерватьВыборкуПоСериям Тогда
									Прервать;
								КонецЕсли;								

						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;

		ВывестиСтрокиДляПозицииТоваров(
			ТабличныйДокумент,
			Макет,
			ОбластьПерваяСтрокаКолонкаТоваров,
			НомерСтраницы,
			НомерСтроки,
			МассивВыводимыхОбластей);
		
		Область = Макет.ПолучитьОбласть("ПодвалТаблицы");
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПоставщикНаименование",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата),
			"НаименованиеДляПечатныхФорм"));
		Область.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Пока ВыборкаПоДокументамБезУчетаСертификатов.Следующий() Цикл
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В документе %1 отсутствуют товары, для которых ведется учет сертификатов. Печать реестра сертификатов номенклатуры не требуется.'"),
			Строка(ВыборкаПоДокументамБезУчетаСертификатов.Ссылка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ВыборкаПоДокументамБезУчетаСертификатов.Ссылка);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиСтрокиДляПозицииТоваров(ТабличныйДокумент,Макет,ОбластьПерваяСтрокаКолонкаТоваров,НомерСтраницы,НомерСтроки,МассивВыводимыхОбластей)
	
	Если ОбластьПерваяСтрокаКолонкаТоваров <> Неопределено Тогда
		
		ПерваяСтрока = Истина;
		ВыводитьРазделитель = Ложь;
		
		Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда	
			ВыводитьРазделитель = Истина;				
		КонецЕсли;
		
		Если ВыводитьРазделитель Тогда
			
			//Область = Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
			//ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаСертификатов");
			ТабличныйДокумент.Присоединить(Область);
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			//ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			//СтруктураПараметров = Новый Структура;
			//СтруктураПараметров.Вставить("НомерСтраницы", "Страница " + НомерСтраницы);
			//ОбластьЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			//ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			//НомерСтраницы = НомерСтраницы + 1;
			
			//Область = Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
			//ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
			ТабличныйДокумент.Вывести(Область);
			Область = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаСертификатов");
			ТабличныйДокумент.Присоединить(Область);
			
		КонецЕсли;	
		
		Для Каждого ОбластьСертификат Из МассивВыводимыхОбластей Цикл
			
			Если ПерваяСтрока Тогда
				
				//ОбластьПерваяСтрокаНачалоСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
				СтруктураПараметров = Новый Структура;
				//СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
				//ОбластьПерваяСтрокаНачалоСтроки.Параметры.Заполнить(СтруктураПараметров);
				
				//ТабличныйДокумент.Вывести(ОбластьПерваяСтрокаНачалоСтроки);
				ТабличныйДокумент.Вывести(ОбластьПерваяСтрокаКолонкаТоваров);
				
				ПерваяСтрока = Ложь;
			Иначе	
				//Область = Макет.ПолучитьОбласть("СтрокаТаблицыСертификат|НачалоСтроки");
				//ТабличныйДокумент.Вывести(Область);
				
				Область = Макет.ПолучитьОбласть("СтрокаТаблицыСертификат|КолонкаТоваров");
				ТабличныйДокумент.Вывести(Область);
			КонецЕсли;	
			
			ТабличныйДокумент.Присоединить(ОбластьСертификат);
		КонецЦикла;	
		
		МассивВыводимыхОбластей.Очистить();
		НомерСтроки = НомерСтроки + 1;
	КонецЕсли;
	
КонецПроцедуры	

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	// Реализация логики команды печати
	//Если ИдентификаторКоманды = ... Тогда
	//  ...
	//ИначеЕсли ...
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрСертификатов") Тогда 
		ТабличныйДокумент = ПечатьВнешнейПечатнойФормы(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_РеестрСертификатов", "ВНЕШНИЙ: Реестр сертификатов", ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

#Область СведенияОВнешнейОбработке
Функция СведенияОВнешнейОбработке() Экспорт
		
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.4.82");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия = "1.2";
	ПараметрыРегистрации.Наименование = "Реестр сертификатов (внешний)";
	ПараметрыРегистрации.Назначение.Добавить("Документ.РеализацияТоваровУслуг");
	ПараметрыРегистрации.Назначение.Добавить("Документ.ПриобретениеТоваровУслуг");
	ПараметрыРегистрации.Информация = "Печатная форма работает только для УТ не ниже версии 11.4.2.139";
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'ВНЕШНИЙ: Реестр сертификатов'");
	НоваяКоманда.Идентификатор = "ПФ_MXL_РеестрСертификатов";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	

	Возврат ПараметрыРегистрации;
	
КонецФункции
#КонецОбласти

//#Область Вспомогательные
//Функция ПолучитьТаблицуКоманд()
//	Команды = Новый ТаблицаЗначений;
//	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
//	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
//	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
//	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
//	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
//	Возврат Команды;
//КонецФункции
//Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
//	НоваяКоманда = ТаблицаКоманд.Добавить();
//	НоваяКоманда.Представление = Представление;
//	НоваяКоманда.Идентификатор = Идентификатор;
//	НоваяКоманда.Использование = Использование;
//	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
//	НоваяКоманда.Модификатор = Модификатор;
//КонецПроцедуры
//#КонецОбласти 