
Функция Печать() Экспорт
	
	ТабДок = Новый ТабличныйДокумент();
	МассивОбъектов = Новый Массив();
	МассивОбъектов.Добавить(СсылкаНаОбъект);
	ОбъектыПечати = Новый СписокЗначений();
	
	ТабДок = ПечатьДокумента(МассивОбъектов, ОбъектыПечати);
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Устанавливаем параметры печати и колонтитулы
	ТабДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху 		   	= 12;
	ТабДокумент.ПолеСлева  		   	= 0;
	ТабДокумент.ПолеСнизу  		   	= 0;
	ТабДокумент.ПолеСправа 		   	= 0;
	ТабДокумент.АвтоМасштаб 		= Истина;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйПередаточныйДокумент";
	
	ПервыйДокумент 	   		= Истина;
	ВыводитьКолонтитул 		= МассивОбъектов.Количество() = 1;
	ТабДокументНеВыводитьНаПечать 	= Истина;
	ДокументыСчетФактураНеТребуется = ОпределитьСчетФактураТребуются(МассивОбъектов);
	ОшибокНет = Истина;
	Для каждого Ссылка Из МассивОбъектов Цикл
		Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ОшибокНет = ПечатьУПДИзРеализации(ПервыйДокумент, ТабДокумент, Ссылка, ДокументыСчетФактураНеТребуется, ВыводитьКолонтитул, ОбъектыПечати);
			Если не ОшибокНет Тогда
				
				Продолжить;
				
			КонецЕсли; 
		Иначе
			НапечатеноДокументов = 0;
			ТекстСообщения = "";
			ОшибокНет = ПечатьУПДИзСчетаФактуры(НапечатеноДокументов, ТекстСообщения, ПервыйДокумент, ТабДокумент, Ссылка, ВыводитьКолонтитул, ОбъектыПечати);
			Если не ОшибокНет Тогда
				
				Продолжить;
				
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Если ТабДокументНеВыводитьНаПечать Тогда
			Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент");
			ОбластьМакета = Макет.ПолучитьОбласть("Ошибка");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
	Иначе
		Если НапечатеноДокументов = 0 Тогда
			Если ЗначениеЗаполнено(ТекстСообщения) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент");
			ОбластьМакета = Макет.ПолучитьОбласть("Ошибка");
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
	КонецЕсли; 	
	Возврат ТабДокумент;
	
	
КонецФункции // ПечатьДокумента()          ,

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Функция ПечатьУПДИзРеализации(ПервыйДокумент, ТабДокумент, Ссылка, ДокументыСчетФактураНеТребуется, ВыводитьКолонтитул, ОбъектыПечати)
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ПервыйДокумент = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	РеквизитыДокумента = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, "Ссылка, Дата, Номер, Организация,
	|ВидОперации, Контрагент, ДоговорКонтрагента, ОтпускРазрешил, ГлавныйБухгалтер, Подразделение, 
	|ДоверенностьНомер, ДоверенностьДата, ДоверенностьВыдана, ДоверенностьЧерезКого");
	
	ДанныеДокумента = Новый Структура();
	ДанныеДокумента.Вставить("ДокументСсылка",    				РеквизитыДокумента.Ссылка);
	ДанныеДокумента.Вставить("Номер",             				РеквизитыДокумента.Номер);
	ДанныеДокумента.Вставить("Дата",              				РеквизитыДокумента.Дата);
	ДанныеДокумента.Вставить("Ссылка", 			  				Документы.СчетФактураВыданный.ПустаяСсылка());
	ДанныеДокумента.Вставить("ДокументОснование", 				РеквизитыДокумента.Ссылка);
	ДанныеДокумента.Вставить("Организация",   	  				РеквизитыДокумента.Организация);
	ДанныеДокумента.Вставить("Контрагент", 		  				РеквизитыДокумента.Контрагент);
	ДанныеДокумента.Вставить("ДоговорКонтрагента", 		  		РеквизитыДокумента.ДоговорКонтрагента);
	ДанныеДокумента.Вставить("Руководитель", 	  				РеквизитыДокумента.ОтпускРазрешил);
	ДанныеДокумента.Вставить("ГлавныйБухгалтер",  				РеквизитыДокумента.ГлавныйБухгалтер);
	ДанныеДокумента.Вставить("ВалютаРегламентированногоУчета",  глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	ДанныеДокумента.Вставить("Подразделение", 	  				РеквизитыДокумента.Подразделение);
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.ДоверенностьНомер) ИЛИ ЗначениеЗаполнено(РеквизитыДокумента.ДоверенностьДата)
		ИЛИ ЗначениеЗаполнено(РеквизитыДокумента.ДоверенностьВыдана) ИЛИ ЗначениеЗаполнено(РеквизитыДокумента.ДоверенностьЧерезКого) Тогда
		Доверенность = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'по доверенности №%1 от %2 выданной %3 %4'"),
		РеквизитыДокумента.ДоверенностьНомер, Формат(РеквизитыДокумента.ДоверенностьДата, "ДЛФ=ДД"),
		РеквизитыДокумента.ДоверенностьВыдана, РеквизитыДокумента.ДоверенностьЧерезКого);
		ДанныеДокумента.Вставить("Доверенность", Доверенность);
	КонецЕсли;
	
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.ДоговорКонтрагента, "ВидДоговора");
	ПередачаНаРеализациюПоКомиссии = (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	ДанныеДокумента.Вставить("ПередачаНаРеализациюПоКомиссии",  ПередачаНаРеализациюПоКомиссии);
	
	СчетФактураТребуется = (ДокументыСчетФактураНеТребуется.Найти(Ссылка) = Неопределено);
	
	СтруктураОтбораСчетаФактуры = Новый Структура;
	СтруктураОтбораСчетаФактуры.Вставить("ПометкаУдаления", Ложь);
	
	Если ПечатьУниверсальногоПередаточногоДокументаОбщая(ДанныеДокумента, СчетФактураТребуется, ТабДокумент, СтруктураОтбораСчетаФактуры) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТабДокумент.ВерхнийКолонтитул.Выводить = ВыводитьКолонтитул;
	
	ТабДокументНеВыводитьНаПечать = Ложь;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	
	Возврат Истина;
	
КонецФункции // ПечатьУПДИзРеализации()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Функция  ПечатьУПДИзСчетаФактуры(НапечатеноДокументов, ТекстСообщения, ПервыйДокумент, ТабДокумент, Ссылка, ВыводитьКолонтитул, ОбъектыПечати)
	
	Если Не ПервыйДокумент Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ПервыйДокумент = Ложь;
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, "Ссылка, ПометкаУдаления, Дата, ВидСчетаФактуры, 
	|Исправление, НомерИсправления,	ДоговорКонтрагента, СчетФактураБезНДС, ДокументОснование, КППКонтрагента, ИдентификаторГосКонтракта");
	
	Если РеквизитыСФ.Дата < '20130101' Тогда
		ТекстСообщения = НСтр("ru = 'Применение формы универсального передаточного документа возможно только с 01 января 2013 года'");
		Возврат Ложь;
	КонецЕсли;
	
	Если РеквизитыСФ.ПометкаУдаления Тогда
		ТекстСообщения = НСтр("ru = 'Форма универсального передаточного документа не предназначена для помеченных на удаление документов'");
		Возврат Ложь;
	КонецЕсли;
	
	Если РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.КорректировочныйНаАванс
		ИЛИ РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
		ТекстСообщения = "Форма универсального передаточного документа не применяется для счетов-фактур на аванс";
		Возврат Ложь;
	КонецЕсли;
	
	Если РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ТекстСообщения = "Форма универсального передаточного документа не применяется при исполнении обязанностей налогового агента";
		Возврат Ложь;
	КонецЕсли;
	
	Если РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.Корректировочный Тогда
		ТекстСообщения = НСтр("ru = 'Форма универсального передаточного документа не применяется для корректировочных счетов-фактур'");
		Возврат Ложь;
	КонецЕсли;
	
	Если РеквизитыСФ.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу Тогда
		ТекстСообщения = НСтр("ru = 'Форма универсального передаточного документа не применяется для счетов-фактур на суммовые разницы'");
		Возврат Ложь;
	КонецЕсли;
	
	ДанныеДляПечати = ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокументаИзСФ(РеквизитыСФ);
	Если ДанныеДляПечати = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПечатьУниверсальногоПередаточногоДокумента(ДанныеДляПечати, ТабДокумент);
	
	ТабДокумент.ВерхнийКолонтитул.Выводить = ВыводитьКолонтитул;
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	
	НапечатеноДокументов = НапечатеноДокументов + 1;
	
	Возврат Истина;
	
КонецФункции // ПечатьУПДИзСчетаФактуры()



// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция ОпределитьСчетФактураТребуются(МассивОбъектов) Экспорт
	
	ДокументыСчетФактураНеТребуется = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивОбъектов) Тогда
		Возврат ДокументыСчетФактураНеТребуется;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.СуммаНДС > 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.СуммаНДС > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ДокументыСНДС.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслуг.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности)
	|	И РеализацияТоваровУслуг.ДоговорКонтрагента.ВидДоговора <> ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Отгрузки без перехода права собственности
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Выборка.Дата, Выборка.Организация);
		Если НЕ ЗначениеЗаполнено(УчетнаяПолитика) Тогда
			ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
		ИначеЕсли НЕ УчетнаяПолитика.НачислятьНДСПоОтгрузке Тогда
			ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
		ИначеЕсли НЕ Выборка.ЕстьНДС И УчетнаяПолитика.УСН Тогда
			ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	// Отгрузки по договорам комиссии
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	// Прочие реализации
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Выборка.Дата, Выборка.Организация);
		Если НЕ ЗначениеЗаполнено(УчетнаяПолитика) Тогда
			ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
		ИначеЕсли НЕ Выборка.ЕстьНДС И УчетнаяПолитика.УСН Тогда
			ДокументыСчетФактураНеТребуется.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуется;
	
КонецФункции

Функция ПечатьУниверсальногоПередаточногоДокументаОбщая(ДанныеДокумента, СчетФактураТребуется, ТабДокумент = Неопределено, СтруктураОтбораСчетаФактуры = Неопределено)
	Если ДанныеДокумента.Дата < '20130101' Тогда
		ТекстСообщения = НСтр("ru = 'Применение формы универсального передаточного документа возможно только с 01 января 2013 года!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтруктураОтбораСчетаФактуры = Неопределено Тогда
		СчетФактура = НайтиПодчиненныйСчетФактуру(ДанныеДокумента.ДокументСсылка, "СчетФактураВыданный");
	Иначе
		СчетФактура = НайтиПодчиненныйСчетФактуру(ДанныеДокумента.ДокументСсылка, "СчетФактураВыданный", СтруктураОтбораСчетаФактуры);
	КонецЕсли;
	
	Если ТабДокумент = Неопределено Тогда
		ТабДокумент = Новый ТабличныйДокумент;
		// Устанавливаем параметры печати и колонтитулы
		ТабДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
		ТабДокумент.ПолеСверху 			= 12;
		ТабДокумент.ПолеСлева  			= 0;
		ТабДокумент.ПолеСнизу  			= 0;
		ТабДокумент.ПолеСправа 			= 0;
		ТабДокумент.АвтоМасштаб 		= Истина;
		
		Если ДанныеДокумента.Дата < '20171001' Тогда
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйПередаточныйДокумент";
		Иначе
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УниверсальныйПередаточныйДокумент981";
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СчетФактура) ИЛИ СчетФактураТребуется Тогда
		
		// УПД печатается из документа счет-фактура
		Если НЕ ЗначениеЗаполнено(СчетФактура) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'По документу ""%1"" не выписан счет-фактура или он помечен на удаление!'"), ДанныеДокумента.ДокументСсылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;
		
		РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СчетФактура, "Дата, ВидСчетаФактуры, Исправление,НомерИсправления,
		|СчетФактураБезНДС, КППКонтрагента, ИдентификаторГосКонтракта");
		ДанныеДокумента.Вставить("Ссылка", 					СчетФактура); 
		ДанныеДокумента.Вставить("Дата", 					РеквизитыСФ.Дата);
		ДанныеДокумента.Вставить("ВидСчетаФактуры", 		РеквизитыСФ.ВидСчетаФактуры);
		ДанныеДокумента.Вставить("Исправление", 	 		РеквизитыСФ.Исправление);
		ДанныеДокумента.Вставить("НомерИсправления", 		РеквизитыСФ.НомерИсправления);
		ДанныеДокумента.Вставить("СчетФактураБезНДС", 		РеквизитыСФ.СчетФактураБезНДС);
		ДанныеДокумента.Вставить("КППКонтрагента", 	 		РеквизитыСФ.КППКонтрагента);
		ДанныеДокумента.Вставить("ИдентификаторГосКонтракта", РеквизитыСФ.ИдентификаторГосКонтракта);
		
		ДанныеДляПечати = Документы.СчетФактураВыданный.ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокумента(ДанныеДокумента);
		Если ДанныеДляПечати = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если ДанныеДокумента.Свойство("ДатаОтгрузкиПередачи") Тогда
			ДанныеДляПечати.Вставить("ДатаОтгрузкиПередачи", ДанныеДокумента.ДатаОтгрузкиПередачи);
		КонецЕсли;
		
		ПечатьУниверсальногоПередаточногоДокумента(ДанныеДляПечати, ТабДокумент);
		
		Возврат ТабДокумент;
		
	КонецЕсли;
	
КонецФункции

// Функция производит поиск счета-фактуры (полученного или выданного), у которого в качестве документа-основания указана
// переданная ссылка.
//
// Параметры:
//  ДокументСсылка  - ссылка на документ, для которого надо найти подчиненный документ,
//  ВидСчетаФактуры - строка, вид документа, по умолчанию "СчетФактураВыданный"
//  Отбор 			- структура с именами и значениями реквизитов СФ для дополнительного отбора
//	
// Возвращаемое значение:
//  Если нашли, то возвращаем ссылку, не нашли - Неопределено
//
Функция НайтиПодчиненныйСчетФактуру(Знач ДокументСсылка, ВидДокумента = "СчетФактураВыданный", Отбор = Неопределено, ИсключитьИзВыборкиСФ = Неопределено, МетаданныеОснования = Неопределено) Экспорт
	
	Если не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	Иначе
		
		Если МетаданныеОснования = Неопределено Тогда
			МетаданныеОснования = ДокументСсылка.Метаданные();
		КонецЕсли; 
		
		Если МетаданныеОснования.Реквизиты.Найти("ИспользоватьДокументРасчетовКакСчетФактуру") <> Неопределено
			И МетаданныеОснования.Реквизиты.Найти("РасчетныйДокумент") <> Неопределено 
			И ДокументСсылка.ИспользоватьДокументРасчетовКакСчетФактуру Тогда
			Если Не ЗначениеЗаполнено(ДокументСсылка.РасчетныйДокумент) Тогда
				Возврат Неопределено;
			Иначе
				Если ТипЗнч(ДокументСсылка.РасчетныйДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") 
					И Не ДокументСсылка.РасчетныйДокумент.ПокупателемВыставляетсяСчетФактураНаВозврат Тогда
					ДокументСсылка = ДокументСсылка.РасчетныйДокумент.Сделка;
					Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
						Возврат Неопределено;
					КонецЕсли;
					МетаданныеОснования = ДокументСсылка.Метаданные();					
				Иначе
					ДокументСсылка = ДокументСсылка.РасчетныйДокумент;
					МетаданныеОснования = ДокументСсылка.Метаданные();
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;
		
	КонецЕсли;
	
	НайденныйДокумент = Неопределено;
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СФ.Ссылка
	|ПОМЕСТИТЬ ВрмТбл
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СФ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Авансы КАК Авансы
	|		ПО СФ.Ссылка = Авансы.Ссылка
	|ГДЕ
	|	СФ.ДокументОснование = &ДокументСсылка";
	
	Если не ВидДокумента = "СчетФактураВыданный" Тогда
		Запрос.Текст = СтрЗаменитЬ(Запрос.Текст,"СчетФактураВыданный",ВидДокумента);
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ИсключитьИзВыборкиСФ) Тогда
		Запрос.УстановитьПараметр("ИсключитьИзВыборкиСФ", ИсключитьИзВыборкиСФ);
		Если ТипЗнч(ИсключитьИзВыборкиСФ) = Тип("Массив") Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И НЕ СФ.Ссылка В (&ИсключитьИзВыборкиСФ)
			|";
		Иначе
			Запрос.Текст = Запрос.Текст + "
			|	И НЕ СФ.Ссылка = &ИсключитьИзВыборкиСФ
			|";
		КонецЕсли;
	КонецЕсли; 
	Если не Отбор = Неопределено Тогда
		Для каждого ЭлементОтбора Из Отбор Цикл
			Если ТипЗнч(ЭлементОтбора.Значение) = Тип("Булево") Тогда
				
				Запрос.Текст = Запрос.Текст + "
				|	И "+?(ЭлементОтбора.Значение," "," НЕ ")+" СФ.Ссылка."+ЭлементОтбора.Ключ;
			ИначеЕсли ЭлементОтбора.Ключ = "СтавкиНДС" Тогда
				
				Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
				Запрос.Текст = Запрос.Текст + "
				|	И Авансы.СтавкаНДС В (&"+ЭлементОтбора.Ключ+")";
			ИначеЕсли ЭлементОтбора.Ключ = "СчетНаОплату" 
				И ВидДокумента = "СчетФактураВыданный" Тогда
				
				Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
				Запрос.Текст = Запрос.Текст + "
				|	И Авансы.СчетНаОплату В (&"+ЭлементОтбора.Ключ+")";
			Иначе
				
				Запрос.УстановитьПараметр(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
				
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("Массив") 
					ИЛИ ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					Запрос.Текст = Запрос.Текст + "
					|	И СФ.Ссылка."+ЭлементОтбора.Ключ + " В (&"+ЭлементОтбора.Ключ + ")";
				Иначе
					Запрос.Текст = Запрос.Текст + "
					|	И СФ.Ссылка."+ЭлементОтбора.Ключ +" = &"+ЭлементОтбора.Ключ;
				КонецЕсли;
				
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Запрос.Текст = Запрос.Текст + ";";
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ Ссылка
	| ИЗ ВрмТбл
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка.ПометкаУдаления,
	|	Ссылка.Проведен УБЫВ,
	|	Ссылка.Дата";
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаИзЗапроса.Следующий() Тогда
		НайденныйДокумент = ВыборкаИзЗапроса.Ссылка;
	КонецЕсли;
	
	Возврат НайденныйДокумент;
	
КонецФункции // НайтиПодчиненныйСчетФактуру()


// Процедура формирует печатную форму универсального передаточного документа
//
Процедура ПечатьУниверсальногоПередаточногоДокумента(ДанныеДляПечати, ТабДокумент) Экспорт
	
	Если ДанныеДляПечати.Дата < '20171001' Тогда
		Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент");
	Иначе
		Макет = ПолучитьОбщийМакет("УниверсальныйПередаточныйДокумент981");
	КонецЕсли;
	
	ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	УчетНДС.ВывестиПодвалУниверсальногоПередаточногоДокументаВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати);
	
КонецПроцедуры

Процедура ВывестиСчетФактуруВТабличныйДокумент(ТабДокумент, Макет, ДанныеДляПечати) Экспорт
	
	Дата                    = ДанныеДляПечати.Дата;
	ЭтоПечатьУПД            = ДанныеДляПечати.Свойство("СтатусУПД");
	ВерсияПостановления1137 = ВерсияПостановленияНДС1137(Дата);
	
	БезПереходаПраваСобственности = Ложь;
	Если ЭтоПечатьУПД И (ДанныеДляПечати.СтатусУПД = 2) Тогда
		Если ДанныеДляПечати.Свойство("ПередачаНаРеализациюПоКомиссии") 
			И ДанныеДляПечати.ПередачаНаРеализациюПоКомиссии Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
		
		Если ДанныеДляПечати.Свойство("ДокументОснование") 
			И ТипЗнч(ДанныеДляПечати.ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров") Тогда
			БезПереходаПраваСобственности = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив") Тогда
		СведенияОПоставщике = Новый Массив;
		Для каждого Поставщик Из ДанныеДляПечати.Поставщик Цикл
			СведенияОПоставщике.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Поставщик, Дата));
		КонецЦикла;
	Иначе
		СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, Дата);
	КонецЕсли;
	
	НужныСведенияОПодразделенииПокупателя = ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию
	ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс;
	
	Если ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("Массив") Тогда
		СведенияОПокупателе = Новый Массив;
		СведенияОПодразделенииПокупателя = Новый Массив;
		Для каждого Покупатель Из ДанныеДляПечати.Покупатель Цикл
			Если НужныСведенияОПодразделенииПокупателя Тогда
				РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
				Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата));
					СведенияОПодразделенииПокупателя.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата));
				Иначе
					СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
					СведенияОПодразделенииПокупателя.Добавить(Неопределено);
				КонецЕсли;
			Иначе
				СведенияОПокупателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Покупатель, Дата));
				СведенияОПодразделенииПокупателя.Добавить(Неопределено);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если НужныСведенияОПодразделенииПокупателя
			И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(ДанныеДляПечати.Покупатель) Тогда
			РеквизитыПокупателя = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДанныеДляПечати.Покупатель, "ГоловнойКонтрагент, ОбособленноеПодразделение");
			Если РеквизитыПокупателя.ОбособленноеПодразделение И ЗначениеЗаполнено(РеквизитыПокупателя.ГоловнойКонтрагент) Тогда
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(РеквизитыПокупателя.ГоловнойКонтрагент, Дата);
				СведенияОПодразделенииПокупателя = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			Иначе
				СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
				СведенияОПодразделенииПокупателя = Неопределено;
			КонецЕсли;
		Иначе
			СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Дата);
			СведенияОПодразделенииПокупателя = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	// Выводим шапку
	ВедетсяУчетНДСПоФЗ56 = ВедетсяУчетНДСПоФЗ56(Дата);
	Если НЕ ЭтоПечатьУПД Тогда
		Если ВерсияПостановления1137 < 4 Тогда
			Если ВедетсяУчетНДСПоФЗ56 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаИнформация1137_625");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаИнформация1137");
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	Иначе
		Если ВерсияПостановления1137 < 4 Тогда
			Если ВедетсяУчетНДСПоФЗ56 Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка625");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка1137");
			КонецЕсли;
		Иначе
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		КонецЕсли;
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ЭтоПечатьУПД Тогда
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = Строка(ДанныеДляПечати.НомерИсправления);
			ОбластьМакета.Параметры.ДатаИсправления  = Формат(ДанныеДляПечати.ДатаСчетаФактуры, "ДФ='дд ММММ гггг'") + " г.";
		Иначе
			ОбластьМакета.Параметры.НомерИсправления = "--";
			ОбластьМакета.Параметры.ДатаИсправления  = "--";
		КонецЕсли;
	Иначе
		
		Если ДанныеДляПечати.Исправление Тогда
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № " + Строка(ДанныеДляПечати.НомерИсправления) 
			+ " от " + Формат(ДанныеДляПечати.ДатаСчетаФактуры, "ДФ='дд ММММ гггг'") + " г.";
		Иначе 	
			ОбластьМакета.Параметры.НомерИсправления = "Исправление № -- от --";
		КонецЕсли;
	КонецЕсли;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = "--";
		ОбластьМакета.Параметры.АдресПоставщика 		= "--";
		ОбластьМакета.Параметры.ИННпоставщика 			= "--";
		
	Иначе
		
		ЗаголовокПоставщика      = ?(ЭтоПечатьУПД, "", "Продавец: ");
		ЗаголовокАдресПоставщика = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННпоставщика   = ?(ЭтоПечатьУПД, "", "ИНН/КПП продавца: ");
		
		КПППодразделения = "";
		
		ИндексПодразделения = 0;
		Если НЕ (ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2) Тогда
			// В УПД в статусе 2 не выводится индекс обособленного подразделения
			Если ЗначениеЗаполнено(ДанныеДляПечати.Организация.ГоловнаяОрганизация) Тогда
				ИндексПодразделения = ДанныеДляПечати.Организация.ЦифровойИндексОбособленногоПодразделения;
			КонецЕсли;
		КонецЕсли;
		Если ИндексПодразделения <> 0 Тогда
			ДанныеДляПечати.Номер = ДанныеДляПечати.Номер + "/" + ИндексПодразделения;
		КонецЕсли;
		
		Если ТипЗнч(СведенияОПоставщике) = Тип("Массив")  Тогда
			
			ТекстПоставщика      = "";
			ТекстАдресПоставщика = "";
			ТекстИННПоставщика   = "";
			Если ТипЗнч(ДанныеДляПечати.КПП) = Тип("Массив") 
				И ДанныеДляПечати.КПП.Количество() = СведенияОПоставщике.Количество() тогда
				СведенияОКПП = ДанныеДляПечати.КПП;
			Иначе
				СведенияОКПП = Неопределено;
			КонецЕсли;
			
			Для Индекс = 0 По СведенияОПоставщике.ВГраница() Цикл
				
				ДанныеПоставщика = СведенияОПоставщике[Индекс];
				
				ТекстПоставщика = ТекстПоставщика + ?(ПустаяСтрока(ТекстПоставщика), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ПолноеНаименование,");
				ТекстАдресПоставщика = ТекстАдресПоставщика + ?(ПустаяСтрока(ТекстАдресПоставщика), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ЮридическийАдрес,");
				КПП = ?(СведенияОКПП <> Неопределено И СведенияОКПП[Индекс] <> Неопределено, 
				СведенияОКПП[Индекс],
				ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "КПП,", Ложь));
				ТекстИННПоставщика = ТекстИННПоставщика + ?(ПустаяСтрока(ТекстИННПоставщика), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеПоставщика, "ИНН,", Ложь) 
				+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
				
			КонецЦикла;
			
		Иначе
			
			ТекстПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,");
			ТекстАдресПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
			
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент
				И ДанныеДляПечати.ДоговорКонтрагента.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент Тогда
				ТекстИННПоставщика = "--";
			Иначе
				Если ДанныеДляПечати.Свойство("КПП") Тогда
					КПП = ДанныеДляПечати.КПП; 
				ИначеЕсли ЗначениеЗаполнено(КПППодразделения) Тогда
					КПП = КПППодразделения;
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
				КонецЕсли;	
				
				//ЕЕК++
				Грузоотправитель = ДанныеДляПечати.Грузоотправитель;
				Если ЗначениеЗаполнено(Грузоотправитель) Тогда
					
					ТекстИННПоставщика = Строка(Грузоотправитель.ИНН) + "/" + Строка(Грузоотправитель.КПП);
					
				Иначе
					
					ТекстИННПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) 
					+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
					
				КонецЕсли;
				//ЕЕК--
				
				
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ЗаголовокПоставщика + ТекстПоставщика;
		ОбластьМакета.Параметры.АдресПоставщика         = ЗаголовокАдресПоставщика + ТекстАдресПоставщика;
		ОбластьМакета.Параметры.ИННпоставщика           = ЗаголовокИННпоставщика + ТекстИННпоставщика;
		
	КонецЕсли;
	
	Если ЭтоПечатьУПД Тогда
		НомерНаПечатьСтрокой 	= ОбщегоНазначения.ПолучитьНомерНаПечать(ДанныеДляПечати);
		ДатаНаПечатьСтрокой 	= Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
		ОбластьМакета.Параметры.Номер = НомерНаПечатьСтрокой;
		ОбластьМакета.Параметры.Дата  =	ДатаНаПечатьСтрокой;
		ЗаголовокДляПечати = "Универсальный передаточный документ № " + НомерНаПечатьСтрокой + " от " +  ДатаНаПечатьСтрокой;
	Иначе
		Если ДанныеДляПечати.Исправление Тогда
			ЗаголовокДляПечати = "Счет-фактура № " + ДанныеДляПечати.Номер + " от " + Формат(Дата, "ДФ='дд ММММ гггг'");
		Иначе
			ЗаголовокДляПечати = ОбщегоНазначения.СформироватьЗаголовокДокумента(ДанныеДляПечати, "Счет-фактура") + " г.";
		КонецЕсли;
		ОбластьМакета.Параметры.Номер = ЗаголовокДляПечати;
	КонецЕсли;
	
	ТолькоУслуги = Истина;
	Для каждого СтрокаТовар Из ДанныеДляПечати.ТабличнаяЧасть Цикл
		Если (ТипЗнч(СтрокаТовар.Товар) = Тип("СправочникСсылка.Номенклатура") И НЕ СтрокаТовар.Товар.Услуга)
			ИЛИ ТипЗнч(СтрокаТовар.Товар) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			ТолькоУслуги = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
		
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ") + "--";
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ") + "--";
		
	Иначе
		
		Если ТолькоУслуги Тогда
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ") + "--";
			ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ") + "--";
		Иначе
			Если ТипЗнч(ДанныеДляПечати.Грузоотправитель) = Тип("Массив")  Тогда
				СведенияОГрузоотправителе = Новый Массив;
				Для каждого Грузоотправитель Из ДанныеДляПечати.Грузоотправитель Цикл
					СведенияОГрузоотправителе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузоотправитель, Дата));
				КонецЦикла;
			Иначе
				СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
				?(БезПереходаПраваСобственности, ДанныеДляПечати.Поставщик, 
				?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель)), Дата);
			КонецЕсли;
			
			ЗаголовокГрузоотправителя = ?(ЭтоПечатьУПД, "", "Грузоотправитель и его адрес: ");
			
			Если ТипЗнч(СведенияОГрузоотправителе) = Тип("Массив") Тогда
				ТекстГрузоотправителя = "";
				Для каждого ДанныеГрузоотправителя Из СведенияОГрузоотправителе Цикл
					ТекстГрузоотправителя = ТекстГрузоотправителя + ?(ПустаяСтрока(ТекстГрузоотправителя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузоотправителя, 
					"ПолноеНаименование, ФактическийАдрес,");
				КонецЦикла;
			Иначе
				ТекстГрузоотправителя = ?(НЕ ЗначениеЗаполнено(СведенияОГрузоотправителе), 
				"--", 
				?(ДанныеДляПечати.Грузоотправитель = "он же", "он же", 
				ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправителе,  
				"ПолноеНаименование, ФактическийАдрес,")));
			КонецЕсли;
			
			ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ЗаголовокГрузоотправителя + ТекстГрузоотправителя;
			
			Если ТипЗнч(ДанныеДляПечати.Грузополучатель) = Тип("Массив")  Тогда
				СведенияОГрузополучателе = Новый Массив;
				Для каждого Грузополучатель Из ДанныеДляПечати.Грузополучатель Цикл
					СведенияОГрузополучателе.Добавить(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Грузополучатель, Дата));
				КонецЦикла;
				
			Иначе
				СведенияОГрузополучателе  = ?(БезПереходаПраваСобственности, СведенияОПокупателе, 
				УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, Дата));
			КонецЕсли;
			
			ЗаголовокГрузополучателя = ?(ЭтоПечатьУПД, "", "Грузополучатель и его адрес: ");
			Если ТипЗнч(СведенияОГрузополучателе) = Тип("Массив") Тогда
				ТекстГрузополучателя = "";
				Для каждого ДанныеГрузополучателя Из СведенияОГрузополучателе Цикл
					ТекстГрузополучателя = ТекстГрузополучателя + ?(ПустаяСтрока(ТекстГрузополучателя), "", ";")
					+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеГрузополучателя, 
					"ПолноеНаименование, ФактическийАдрес,");
				КонецЦикла;
			Иначе
				Если ДанныеДляПечати.Свойство("АдресДоставки") 
					И НЕ ПустаяСтрока(ДанныеДляПечати.АдресДоставки) Тогда
					ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					ДанныеДляПечати.АдресДоставки,
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
					"ПолноеНаименование") + ", " + ДанныеДляПечати.АдресДоставки);
				Иначе
					ТекстГрузополучателя = ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), 
					"--",
					ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
					"ПолноеНаименование, ФактическийАдрес,"));
				КонецЕсли;
			КонецЕсли;
			ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ЗаголовокГрузополучателя + ТекстГрузополучателя;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаПоДокументу = "";
	Если ДанныеДляПечати.Свойство("ТаблицаДатОплат") Тогда
		Для каждого ПараметрыДокументаОплаты Из ДанныеДляПечати.ТаблицаДатОплат Цикл
			
			Если НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента)
				И НЕ ЗначениеЗаполнено(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента) Тогда
				Продолжить;
			КонецЕсли;
			СтрокаПоДокументу = СтрокаПоДокументу
			+ ?(ПустаяСтрока(СтрокаПоДокументу), ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № "),", ")
			+ ПараметрыДокументаОплаты.НомерПлатежноРасчетногоДокумента 
			+ " от " + Формат(ПараметрыДокументаОплаты.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy") + " г.";
			
		КонецЦикла; 
	КонецЕсли;
	Если ПустаяСтрока(СтрокаПоДокументу) Тогда
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "-- от --";
		Иначе
			СтрокаПоДокументу = ?(ЭтоПечатьУПД, "", "К платежно-расчетному документу № ") + "   от";
		КонецЕсли; 
	КонецЕсли; 
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
		// В УПД в статусе 2 ставятся прочерки показатели, установленные в качестве обязательных исключительно для счета-фактуры: 
		// - «К платежно-расчетному документу» (строка 7); 
		СтрокаПоДокументу = "--";
	КонецЕсли;
	ОбластьМакета.Параметры.ПоДокументу = СтрокаПоДокументу;
	
	Если БезПереходаПраваСобственности Тогда
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = "--";
		ОбластьМакета.Параметры.АдресПокупателя 		= "--";
		ОбластьМакета.Параметры.ИННПокупателя 			= "--";
		
	Иначе
		
		ЗаголовокПокупателя      = ?(ЭтоПечатьУПД, "", "Покупатель: ");
		ЗаголовокАдресПокупателя = ?(ЭтоПечатьУПД, "", "Адрес: ");
		ЗаголовокИННПокупателя   = ?(ЭтоПечатьУПД, "", "ИНН/КПП покупателя: ");
		
		Если ТипЗнч(СведенияОПокупателе) = Тип("Массив") Тогда
			
			ТекстПокупателя      = "";
			ТекстАдресПокупателя = "";
			ТекстИННПокупателя   = "";
			
			Для Индекс = 0 По СведенияОПокупателе.ВГраница() Цикл
				
				ДанныеОПокупателе = СведенияОПокупателе[Индекс];
				ДанныеОПодразделенииПокупателя = СведенияОПодразделенииПокупателя[Индекс];
				
				ТекстПокупателя = ТекстПокупателя + ?(ПустаяСтрока(ТекстПокупателя), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ПолноеНаименование,");
				ТекстАдресПокупателя = ТекстАдресПокупателя + ?(ПустаяСтрока(ТекстАдресПокупателя), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ЮридическийАдрес,");
				Если ДанныеОПодразделенииПокупателя <> Неопределено Тогда
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПодразделенииПокупателя, "КПП,", Ложь);
				Иначе
					КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "КПП,", Ложь);
				КонецЕсли;
				ТекстИННПокупателя = ТекстИННПокупателя + ?(ПустаяСтрока(ТекстИННПокупателя), "", ";")
				+ ФормированиеПечатныхФорм.ОписаниеОрганизации(ДанныеОПокупателе, "ИНН,", Ложь) 
				+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
				
			КонецЦикла;
			
		Иначе
			
			ТекстПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
			ТекстАдресПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,");
			
			Если ДанныеДляПечати.Свойство("КППКонтрагента") И ЗначениеЗаполнено(ДанныеДляПечати.КППКонтрагента) Тогда
				КПП = ДанныеДляПечати.КППКонтрагента;
			ИначеЕсли СведенияОПодразделенииПокупателя <> Неопределено Тогда
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПодразделенииПокупателя, "КПП,", Ложь);
			Иначе
				КПП = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
			КонецЕсли;
			ТекстИННПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
			+ ?(ЗначениеЗаполнено(КПП), "/" + КПП, "");
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ЗаголовокПокупателя + ТекстПокупателя;
		ОбластьМакета.Параметры.АдресПокупателя         = ЗаголовокАдресПокупателя + ТекстАдресПокупателя;
		ОбластьМакета.Параметры.ИННПокупателя           = ЗаголовокИННПокупателя + ТекстИННПокупателя;
		
	КонецЕсли;
	
	ОбластьМакета.Параметры.Валюта = ?(ЭтоПечатьУПД, "", "Валюта: наименование, код ")
	+ ?(ЗначениеЗаполнено(ДанныеДляПечати.Валюта), 
	ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + ДанныеДляПечати.Валюта.Код, "");		
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ВедетсяУчетНДСПоФЗ56 Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("ИдентификаторГосКонтракта");
		Если ЭтоПечатьУПД Тогда 
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = ДанныеДляПечати.ИдентификаторГосКонтракта;
		Иначе
			Если ВерсияПостановления1137 < 4 Тогда
				ШаблонЗаголовкаГосконтракт = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения): %1'");
			Иначе
				ШаблонЗаголовкаГосконтракт = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения) (при наличии): %1'");
			КонецЕсли;
			ОбластьМакета.Параметры.ИдентификаторГосКонтракта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовкаГосконтракт, ДанныеДляПечати.ИдентификаторГосКонтракта);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если НЕ ЭтоПечатьУПД Тогда
		Если ТипЗнч(ДанныеДляПечати.Ссылка) = Тип("ДокументСсылка.СчетФактураВыданный")
			И ТипЗнч(ДанныеДляПечати.Покупатель) = Тип("СправочникСсылка.Контрагенты") 
			И (ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("СправочникСсылка.Контрагенты")
			ИЛИ ТипЗнч(ДанныеДляПечати.Поставщик) = Тип("Массив")) Тогда
			
			ВывестиРеквизитыКомиссионера(ДанныеДляПечати.Организация, ДанныеДляПечати.Поставщик, ДанныеДляПечати.Покупатель, Дата, Макет, ТабДокумент);
			
		КонецЕсли;
	КонецЕсли;
	
	// Выводим заголовок таблицы
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Дополнительная подготовка данных для вывода в табличную часть
	ВыборкаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаСНДС");
	
	Если ЭтоПечатьУПД Тогда
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды 	= Истина;
			КолонкаТоварКод = "ТоварАртикул";
		ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды 	= Истина;
			КолонкаТоварКод = "ТоварКод";
		Иначе
			ВыводитьКоды 	= Ложь;
			КолонкаТоварКод	= "";
		КонецЕсли;
	Иначе
		ВыводитьКоды 	= Ложь;
		КолонкаТоварКод	= "";
	КонецЕсли;
	
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию И 
			(Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118
			ИЛИ Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) Тогда
			Если (НЕ Строчка.СуммаВключаетНДС) ИЛИ Строчка.Цена = 0 Тогда
				Строчка.Цена = Окр(Строчка.СуммаСНДС / Строчка.Количество, 2);
			КонецЕсли;
		Иначе
			Если Строчка.СуммаВключаетНДС Тогда
				Строчка.Цена = 0;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Строчка.ЕдиницаИзмерения) Тогда
			Строчка.Количество = 0;
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Количество = 0 Тогда
			Строчка.Цена = 0;
		ИначеЕсли Строчка.Цена = 0 Тогда
			Строчка.Цена = Окр(Строчка.СуммаБезНДС / Строчка.Количество, 2);
		КонецЕсли;
		
		Строчка.ТоварКод = ?(ВыводитьКоды, Строчка[КолонкаТоварКод], "");
		
		Если ДанныеДляПечати.Дата >= '20160701' И ВерсияПостановления1137 < 4
			И Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС0
			И ЗначениеЗаполнено(Строчка.ТоварКодТНВЭД) Тогда
			// Дополняем наименование товара информацией о коде ТН ВЭД
			Строчка.ТоварНаименование = Строчка.ТоварНаименование + ", код ТН ВЭД " + СокрЛП(Строчка.ТоварКодТНВЭД);
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиДляСвертки = ?(ВыборкаСтрокТовары.Колонки.Найти("Контрагент") <> Неопределено, "Контрагент,", "")
	+ "Товар, ТоварНаименование, ТоварКод, ТоварКодТНВЭД, ЕдиницаИзмерения, ЕдиницаИзмеренияКод, Цена, СтавкаНДС,"
	+ "НомерГТД, ПредставлениеГТД,РегистрационныйНомерТД, СтранаПроисхождения, СтранаПроисхожденияКод, ПредставлениеСтраны";
	ВыборкаСтрокТовары.Свернуть(КолонкиДляСвертки, "Количество, Сумма, СуммаНДС, СуммаСНДС, СуммаБезНДС, НомерСтроки");
	
	// Выводим строки таблицы
	ОбластьМакета       = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакетаИтого  = Макет.ПолучитьОбласть("Итого");
	Если ЭтоПечатьУПД Тогда
		ОбластьМакетаПодвалНакладной = Макет.ПолучитьОбласть("ПодвалНакладной");
	Иначе
		ОбластьМакетаПодвалНакладной = Новый ТабличныйДокумент;
	КонецЕсли;
	КоличествоСтраниц = 1;
	
	НомерСтроки     = 0;
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();
	
	Если ДанныеДляПечати.Дата >= Константы.ДатаНачалаОперацийСТоварамиОблагаемымиНДСУПокупателя.Получить()
		И ДанныеДляПечати.ДоговорКонтрагента.РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
		РеализацияТоваровОблагаемыхНДСУПокупателя = Истина;
	Иначе
		РеализацияТоваровОблагаемыхНДСУПокупателя = Ложь;
	КонецЕсли;
	
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		
		НомерСтроки = НомерСтроки + 1;
		Строчка.НомерСтроки = НомерСтроки;
		
		Если ВерсияПостановления1137 >= 4 Тогда
			Если ЗначениеЗаполнено(Строчка.РегистрационныйНомерТД) Тогда
				Строчка.ПредставлениеГТД = Строчка.РегистрационныйНомерТД;
			Иначе
				Строчка.ПредставлениеГТД = "";
				Строчка.СтранаПроисхождения = "";
			КонецЕсли;
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(Строчка);
		
		Если НЕ ЗначениеЗаполнено(Строчка.ТоварНаименование) Тогда
			ОбластьМакета.Параметры.ТоварНаименование = Строчка.Товар;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ОбластьМакета.Параметры.ТоварНаименование);
		
		Если ВерсияПостановления1137 >= 4 Тогда
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ТоварКодТНВЭД)
				ИЛИ Строчка.СтавкаНДС <> Перечисления.СтавкиНДС.НДС0 Тогда
				ОбластьМакета.Параметры.ТоварКодТНВЭД = "--";
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
			ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			ОбластьМакета.Параметры.Цена      = Строчка.Цена;
		ИначеЕсли РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
			// Счет-фактура на аванс.
			ОбластьМакета.Параметры.Стоимость = Строчка.СуммаСНДС;
		Иначе
			Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент 
				ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаСуммовуюРазницу Тогда
				ОбластьМакета.Параметры.Стоимость = Строчка.СуммаБезНДС;
			Иначе
				ОбластьМакета.Параметры.Стоимость = 0;
			КонецЕсли;
			ОбластьМакета.Параметры.Количество = 0;
			ОбластьМакета.Параметры.Цена       = 0;
		КонецЕсли;
		
		Если РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
			ОбластьМакета.Параметры.СтавкаНДС  = "НДС исчисляется налоговым агентом";
			ОбластьМакета.Параметры.СуммаНДС   = "--";
			ОбластьМакета.Параметры.Всего      = "--";
		Иначе
			ОбластьМакета.Параметры.Всего      = Строчка.СуммаСНДС;
			ОбластьМакета.Параметры.СтавкаНДС  = Строчка.СтавкаНДС;
		КонецЕсли;
		
		
		Если Строчка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДС  = "без НДС";
		КонецЕсли;
		
		Если ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАванс 
			И ДанныеДляПечати.ВидСчетаФактуры <> Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
			ОбластьМакета.Параметры.Акциз = "без акциза";
		КонецЕсли;	
		
		Если Строка(Строчка.ПредставлениеСтраны) = "Россия" 
			ИЛИ Строка(Строчка.ПредставлениеСтраны) = "Российская Федерация"
			ИЛИ Строчка.СтранаПроисхождения = Справочники.КлассификаторСтранМира.РОССИЯ Тогда			
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
		Иначе
			Если ЗначениеЗаполнено(Строчка.СтранаПроисхождения) Тогда
				ОбластьМакета.Параметры.ПредставлениеСтраны  = СокрЛП(Строчка.СтранаПроисхождения.Наименование);
			Иначе
				ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
				ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
				ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			КонецЕсли;
		КонецЕсли; 
		
		// Проставляем прочерки в незаполненные графы в соответствии с Постановлением
		Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
			
			ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			
			ОбластьМакета.Параметры.Количество = "--";
			ОбластьМакета.Параметры.Цена       = "--";
			
			Если НЕ РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
				ОбластьМакета.Параметры.Стоимость  = "--";
			КонецЕсли;
			
			ОбластьМакета.Параметры.Акциз                  = "--";
			ОбластьМакета.Параметры.СтранаПроисхожденияКод = "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны    = "--";
			ОбластьМакета.Параметры.ПредставлениеГТД       = "--";
			
		Иначе
			
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмерения) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмерения    = "--";
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод) Тогда
				ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Количество) Тогда
				ОбластьМакета.Параметры.Количество = "--";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.Цена) Тогда
				ОбластьМакета.Параметры.Цена = "--";
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
			
			// Ставим прочерки в графах, которые установленные в качестве обязательных исключительно для счета-фактуры
			//- «В том числе сумма акциза» (графа 6); 
			//- «Налоговая ставка» (графа 7);
			//- «Цифровой код страны происхождения товара» (графа 10);
			//- «Краткое наименование страны происхождения товара» (графа 10а);
			//- «Номер таможенной декларации» (графа 11). 
			
			ОбластьМакета.Параметры.Акциз 		= "--";
			ОбластьМакета.Параметры.СтавкаНДС 	= "--";
			ОбластьМакета.Параметры.СуммаНДС 	= ?(Строчка.СуммаНДС <> 0 , Строчка.СуммаНДС, "--");
			ОбластьМакета.Параметры.СтранаПроисхожденияКод 	= "--";
			ОбластьМакета.Параметры.ПредставлениеСтраны 	= "--";
			ОбластьМакета.Параметры.ПредставлениеГТД 		= "--";
			
		КонецЕсли;
		
		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		Если НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			Если ЭтоПечатьУПД Тогда
				СтрокаСПодвалом.Добавить(ОбластьМакетаПодвалНакладной);
			КонецЕсли;
		КонецЕсли;
		
		#Если Сервер ИЛИ ВнешнееСоединение Тогда
			РезультатПроверкиВывода = ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом);
		#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда	
			РезультатПроверкиВывода = ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом);
		#КонецЕсли
		
		Если НЕ РезультатПроверкиВывода Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				КоличествоСтраниц = КоличествоСтраниц + 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	КоличествоЛистов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = 'Документ составлен на%1%2 %3'"), Символы.ПС, КоличествоСтраниц,
	ОбщегоНазначения.ФормаМножественногоЧисла(
	НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), КоличествоСтраниц));
	ДанныеДляПечати.Вставить("КоличествоЛистов", КоличествоЛистов);
	
	Если КоличествоСтрок > 0 Тогда
		ТабДокумент.Область(ТабДокумент.ВысотаТаблицы,,ТабДокумент.ВысотаТаблицы,).ВместеСоСледующим = Истина;
	КонецЕсли; 
	
	// Выводим строку "Всего к оплате"
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
		ИЛИ ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента Тогда
		Если РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
			ОбластьМакетаИтого.Параметры.ИтогоСтоимость = ВыборкаСтрокТовары.Итог("СуммаСНДС");
		Иначе
			ОбластьМакетаИтого.Параметры.ИтогоСтоимость = "--";
		КонецЕсли;
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСтоимость = ВыборкаСтрокТовары.Итог("СуммаБезНДС");
	КонецЕсли;
	
	ИтогоСуммаНДС = ВыборкаСтрокТовары.Итог("СуммаНДС");
	Если ЭтоПечатьУПД И ДанныеДляПечати.СтатусУПД = 2 Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ?(ИтогоСуммаНДС <> 0, ИтогоСуммаНДС, "--");
	ИначеЕсли ДанныеДляПечати.СчетФактураБезНДС Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = "без НДС";
	Иначе
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
	КонецЕсли;
	ОбластьМакетаИтого.Параметры.ИтогоВсего = ВыборкаСтрокТовары.Итог("СуммаСНДС");
	
	Если РеализацияТоваровОблагаемыхНДСУПокупателя Тогда
		ОбластьМакетаИтого.Параметры.ИтогоСуммаНДС = "--";
		ОбластьМакетаИтого.Параметры.ИтогоВсего = "--";
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаИтого);
	
	// Выводим подвал
	ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечати);
	
	Если ДанныеДляПечати.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НалоговыйАгент Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ОписаниеОрганизации(
		СведенияОПокупателе, "Свидетельство,");
	ИначеЕсли ТипЗнч(СведенияОПоставщике) <> Тип("Массив") Тогда
		ОбластьМакетаПодвал.Параметры.Свидетельство = ОписаниеОрганизации(
		СведенияОПоставщике, "Свидетельство,");
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	// Устанавливаем параметры печати и колонтитулы
	ТабДокумент.ВерхнийКолонтитул.Выводить          = Истина;
	ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница = 2;
	ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
	ТабДокумент.ВерхнийКолонтитул.ТекстСлева   = ЗаголовокДляПечати;
	ТабДокумент.ВерхнийКолонтитул.ТекстСправа  = "Лист [&НомерСтраницы]";
	
КонецПроцедуры

// Возвращает признак применения Федерального Закона 56-ФЗ
//
// Параметры
// Дата - тип дата, в данном параметре передается
//        дата на которую необходимо определить признак применения 56-ФЗ
// Возвращаемое значение:
//  Булево - признак применения
//           Истина - ФЗ-56 применяется
//           Ложь   - ФЗ-56 не применяется
//
Функция ВедетсяУчетНДСПоФЗ56(Дата) Экспорт
	
	НачалоПримененияФЗ56 = '20170701';
	
	Если Дата < НачалоПримененияФЗ56 Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ВедетсяУчетНДСПоФЗ56()
// Возвращает версию постановления Правительства РФ от 26.12.2011 г. № 1137
//
// Параметры
//  Период  -  тип дата, в данном параметре передается
//             дата на которую необходимо определить версию постановления
// Возвращаемое значение:
//  Число   -  версия постановления,
//              1 - исходная версия постановления Правительства РФ от 26.12.2011 г. № 1137
//              2 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 952
//              3 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 735
//              4 - постановление Правительства РФ от 26.12.2011 г. № 1137 в редакции постановления № 981
//
Функция ВерсияПостановленияНДС1137(Период) Экспорт
	
	Если Период >= '20171001' Тогда      // Постановление № 981 вступает в силу с 1 октября 2017 года.
		Возврат 4;
	ИначеЕсли Период >= '20141001' Тогда // Постановление № 735 вступает в силу с 1 октября 2014 года.
		Возврат 3;
	ИначеЕсли Период >= '20131106' Тогда // Постановление № 952 вступает в силу с 6 ноября 2013 года.
		Возврат 2;
	Иначе
		Возврат 1;                       // Исходная версия Постановления Правительства РФ от 26.12.2011 г. № 1137.
	КонецЕсли;
	
КонецФункции

Процедура ВывестиРеквизитыКомиссионера(Организация, Поставщик, Покупатель, Дата, Макет, ТабДокумент)
	
	Если ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты")
		И (ТипЗнч(Покупатель) = Тип("СправочникСсылка.Контрагенты")
		ИЛИ ТипЗнч(Поставщик) = Тип("Массив")) Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("РеквизитыКомиссионера");
		
		СведенияОКомиссионере = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата);
		
		НаименованиеКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ПолноеНаименование,");
		ЮридическийАдресКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ЮридическийАдрес,");
		ИННКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ИНН,", Ложь);
		КППКомиссионера = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "КПП,", Ложь);
		
		ОбластьМакета.Параметры.ПредставлениеКомиссионера = "Составлен комиссионером (агентом): " + НаименованиеКомиссионера 
		+ ", " + ЮридическийАдресКомиссионера 
		+ ", ИНН/КПП: " + ИННКомиссионера 
		+ ?(ЗначениеЗаполнено(КППКомиссионера), "/" + КППКомиссионера, "");
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры
Функция ОписаниеОрганизации(СписокСведений, Список = "", СПрефиксом = Истина)
	
	#Если Сервер ИЛИ ВнешнееСоединение Тогда
		Возврат ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СписокСведений, Список, СПрефиксом);
	#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда	
		Возврат ФормированиеПечатныхФорм.ОписаниеОрганизации(СписокСведений, Список, СПрефиксом);		
	#КонецЕсли
	
КонецФункции

// Процедура возвращает общие данные для печати универсального передаточного документа
// по всем документам-основаниям
// 
Функция ПодготовитьДанныеДляПечатиУниверсальногоПередаточногоДокументаИзСФ(ДанныеСчетФактуры) Экспорт
	
	ДанныеДляПечати = Неопределено;
	УчетнаяПолитика = Неопределено;
 	
	УчетНДС.СобратьДанныеДляПечатиСчетФактурыВыданного(ДанныеСчетФактуры.Ссылка, ДанныеДляПечати, УчетнаяПолитика);
	
	Если ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
		Возврат Неопределено;
	ИначеЕсли ДанныеДляПечати = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ДатаСчетаФактуры",		ДанныеСчетФактуры.Дата);
	ДанныеДляПечати.Вставить("ВидСчетаФактуры", 		ДанныеСчетФактуры.ВидСчетаФактуры);
	ДанныеДляПечати.Вставить("Исправление", 	 		ДанныеСчетФактуры.Исправление);
	ДанныеДляПечати.Вставить("НомерИсправления", 		ДанныеСчетФактуры.НомерИсправления);
	ДанныеДляПечати.Вставить("ДоговорКонтрагента", 		ДанныеСчетФактуры.ДоговорКонтрагента);
	ДанныеДляПечати.Вставить("СчетФактураБезНДС", 		ДанныеСчетФактуры.СчетФактураБезНДС);
	ДанныеДляПечати.Вставить("КППКонтрагента", 	 		ДанныеСчетФактуры.КППКонтрагента);
	ДанныеДляПечати.Вставить("ДокументОснование", 	 	ДанныеСчетФактуры.ДокументОснование);
	ДанныеДляПечати.Вставить("ВидАгентскогоДоговора",   
		ОбщегоНазначения.ПолучитьЗначениеРеквизита(ДанныеСчетФактуры.ДоговорКонтрагента, "ВидАгентскогоДоговора"));
	ДанныеДляПечати.Вставить("ИдентификаторГосКонтракта", ДанныеСчетФактуры.ИдентификаторГосКонтракта);
	
	УчетНДС.СформироватьФИОКладовщикаДляПечатиУниверсальногоПередаточногоДокумента(ДанныеДляПечати);
	
	ТипОснования = ТипЗнч(ДанныеДляПечати.ДокументОснование);
	Если ДанныеСчетФактуры.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию Тогда
		
		ТекстСообщения = "";
		
		Если ТипОснования = Тип("ДокументСсылка.НачислениеНДСпоСМРхозспособом") Тогда
			ТекстСообщения = "Форма универсального передаточного документа не применяется при начисления НДС по СМР";
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтражениеРеализацииТоваровИУслугНДС") Тогда
			ТекстСообщения = "Форма универсального передаточного документа не применяется для документа ""Отражение начисления НДС""";
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			ТекстСообщения = "Форма универсального передаточного документа не применяется при оформлении счетов-фактур по отчетам комиссионеров о продажах";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("СтатусУПД", 				1);
	
	Основание = Строка(ДанныеСчетФактуры.ДоговорКонтрагента);
	Если ДанныеСчетФактуры.Свойство("Доверенность") И ЗначениеЗаполнено(ДанныеСчетФактуры.Доверенность) Тогда
		ДанныеДляПечати.Вставить("Основание", Основание + ?(ПустаяСтрока(Основание), "", "; ") + ДанныеСчетФактуры.Доверенность);
	Иначе
		ДанныеДляПечати.Вставить("Основание", Основание);
	КонецЕсли;
	
	// Дата совершения факта хозяйственной жизни. Не может быть ранее даты составления УПД.
	ДанныеДляПечати.Вставить("ДатаОтгрузкиПередачи", 	ДанныеСчетФактуры.Дата);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

