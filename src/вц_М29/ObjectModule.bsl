Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.1.73");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия = "1.0";
	// Определение объектов, к которым подключается эта обработка.
	ПараметрыРегистрации.Назначение.Добавить("Документ.АктОбОказанииПроизводственныхУслуг");
	ПараметрыРегистрации.Назначение.Добавить("Документ.РеализацияТоваровУслуг");
	// Добавление команды печати "М29".
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'М-29 (внешняя печатная форма)'");
	НоваяКоманда.Идентификатор = "М29";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	НоваяКоманда.Модификатор = "ПечатьMXL";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	Возврат ПараметрыРегистрации;
КонецФункции
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "М29");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = СформироватьМ29(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'М-29'");
	КонецЕсли;
КонецПроцедуры

Функция СформироватьМ29(МассивОбъектов, ОбъектыПечати)
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_М29";	
	Для каждого ОбъектМассива Из МассивОбъектов Цикл
		
		
		МассивОбъектовСтроительства = Новый Массив;
		МассивОбъектовСтроительства = ПолучитьМассивОбъектовСтроительства(ОбъектМассива);
		
		Если МассивОбъектовСтроительства.Количество() = 0 Тогда
			
			Возврат ТабличныйДокумент;
			
		КонецЕсли; 
		
		// Получим необходимые данные
		Запрос = Новый Запрос();
		
		Если ТипЗнч(ОбъектМассива) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
			
			ТипДокумента = "АктОбОказанииПроизводственныхУслуг";
		ИначеЕсли ТипЗнч(ОбъектМассива) = Тип("ДокументСсылка.РеализацияТоваровУслуг") тогда 
			ТипДокумента = "РеализацияТоваровУслуг";
			
		КонецЕсли; 
		Запрос.Текст = "ВЫБРАТЬ
		|	Док.Номер как НомерДок,
		|	Док.Дата КАК ДатаДок,
		|	Док.Организация КАК Организация,
		|	Док.Контрагент КАК Заказчик,
		|	Док.Ответственный КАК Ответственный
		|ИЗ
		|	Документ."+ТипДокумента+" КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектМассива);
		
		РезультатШапка = Запрос.Выполнить().Выбрать();
		РезультатШапка.Следующий();
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТребованиеНакладнаяМатериалы.Номенклатура КАК Номенклатура,
		|	СУММА(ТребованиеНакладнаяМатериалы.КоличествоМест) КАК КоличествоМест,
		|	ТребованиеНакладнаяМатериалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(ТребованиеНакладнаяМатериалы.Количество) КАК ТекущийМесяцПоАктам,
		|	ТребованиеНакладнаяМатериалы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ИЗ
		|	Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		|ГДЕ
		|	ТребованиеНакладнаяМатериалы.НоменклатурнаяГруппа В (&НоменклатурнаяГруппа)
		|	И ТребованиеНакладнаяМатериалы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	ТребованиеНакладнаяМатериалы.Номенклатура,
		|	ТребованиеНакладнаяМатериалы.ЕдиницаИзмерения,
		|	ТребованиеНакладнаяМатериалы.НоменклатурнаяГруппа
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТребованиеНакладнаяМатериалы.Номенклатура,
		|	СУММА(ТребованиеНакладнаяМатериалы.КоличествоМест),
		|	ТребованиеНакладнаяМатериалы.ЕдиницаИзмерения,
		|	СУММА(ТребованиеНакладнаяМатериалы.Количество),
		|	ТребованиеНакладнаяМатериалы.НоменклатурнаяГруппа
		|ИЗ
		|	Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		|ГДЕ
		|	ТребованиеНакладнаяМатериалы.Ссылка.Субконто1 В (&НоменклатурнаяГруппа)
		|	И ТребованиеНакладнаяМатериалы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	ТребованиеНакладнаяМатериалы.Номенклатура,
		|	ТребованиеНакладнаяМатериалы.ЕдиницаИзмерения,
		|	ТребованиеНакладнаяМатериалы.НоменклатурнаяГруппа
		|ИТОГИ ПО
		|	НоменклатурнаяГруппа";
		
		Запрос.УстановитьПараметр("НоменклатурнаяГруппа", МассивОбъектовСтроительства);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(РезультатШапка.ДатаДок));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(РезультатШапка.ДатаДок));
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаНоменклатурнаяГруппа = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Макет = ПолучитьМакет("М29");
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		
		Пока ВыборкаНоменклатурнаяГруппа.Следующий() Цикл
			// Вставить обработку выборки ВыборкаНоменклатурнаяГруппа
			
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатурнаяГруппа.Выбрать();
			
			ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры, РезультатШапка);
			СведенияОбОрганизации   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Организация, РезультатШапка.ДатаДок);
			ПредставлениеПодрядчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "");
		
			СведенияОбОрганизации   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(РезультатШапка.Заказчик, РезультатШапка.ДатаДок);
			ПредставлениеЗаказчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "");
			
			ДанныеДляЗаполнения = Новый Структура();
			ДанныеДляЗаполнения.Вставить("ПредставлениеИсполнителя", ПредставлениеПодрядчика);
			ДанныеДляЗаполнения.Вставить("ПредставлениеЗаказчика", ПредставлениеЗаказчика);
			ДанныеДляЗаполнения.Вставить("НазваниеОбъекта", ВыборкаНоменклатурнаяГруппа.НоменклатурнаяГруппа);
            ДанныеДляЗаполнения.Вставить("ДатаДок", Формат(РезультатШапка.ДатаДок, "ДФ='MMMM yyyy'"));
			
			ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры, ДанныеДляЗаполнения);
			
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			НомСтроки = 1;
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицы.Параметры, ВыборкаДетальныеЗаписи);
				ОбластьСтрокаТаблицы.Параметры.НомСтроки = НомСтроки;
				
				НомСтроки = НомСтроки + 1;
				
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			КонецЦикла;
			
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, РезультатШапка);
			
			ТабличныйДокумент.Вывести(ОбластьПодвал);
		КонецЦикла;
	КонецЦикла;	
	Возврат ТабличныйДокумент;
КонецФункции



Функция ПолучитьМассивОбъектовСтроительства(ОбъектМассива)
	МассивОбъектовСтроительства = Новый Массив;
	
	Если ТипЗнч(ОбъектМассива) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Если ОбъектМассива.Услуги.Количество() = 0 Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("нет строк в таблице Услуги");
			
		КонецЕсли; 
		
		Для каждого Строка Из ОбъектМассива.Услуги Цикл
			
			Если МассивОбъектовСтроительства.Найти(Строка.Субконто) = Неопределено Тогда
				
				МассивОбъектовСтроительства.Добавить(Строка.Субконто);
				
			КонецЕсли; 
			
		КонецЦикла;
		
		
		
	ИначеЕсли ТипЗнч(ОбъектМассива) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		
		Если  МассивОбъектовСтроительства.Найти(ОбъектМассива.НоменклатурнаяГруппа) = Неопределено Тогда
			
			МассивОбъектовСтроительства.Добавить(ОбъектМассива.НоменклатурнаяГруппа);
			
		КонецЕсли; 
	КонецЕсли;  
	
	
	Возврат МассивОбъектовСтроительства;
	
КонецФункции // ПолучитьМассивОбъектовСтроительства()
